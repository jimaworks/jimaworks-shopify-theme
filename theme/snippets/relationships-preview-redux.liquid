<!--
  RelationShips Preview Redux
  Original Author: Hugh Guiney <hugh@hughguiney.com>
  Body font size for rem calculations: 16px
-->
<style>
  /* Fonts */
  /* @import url('https://fonts.googleapis.com/css?family=Pinyon+Script&display=swap'); */
  @import url('https://fonts.googleapis.com/css?family=Pacifico&display=swap');

  /*
    Maintian aspect ratio for map
    Source: https://css-tricks.com/aspect-ratio-boxes/#article-header-id-6
  */
  .aspect-ratio:before {
    content: "";
    width: 1px;
    margin-left: -1px;
    float: left;
    height: 0;
  }
  .aspect-ratio:after { /* to clear float */
    content: "";
    display: table;
    clear: both;
  }

  .jw-relationships-preview-container {
    margin: 0;
  }

  .jw-relationships-preview,
  [class*="__text"] {
    font-size: 10px;
    font-size: .625rem;
  }

  .jw-relationships-preview {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;    
    
    max-width: 100%;
    background-color: #fff8d2;
    line-height: 1.25;
    margin-right: auto;
    padding: .625rem;
    
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    
    min-width: 500px;
    min-width: 31.25rem;
    margin-bottom: 0;
  }
    .jw-relationships-preview.aspect-ratio:before {
      padding-top: calc(3561/4407 * 100%);
    }

    /* Applies to all frames */
    .jw-relationships-preview[class*="jw-relationships-preview--frame"] {
      /* border-image-width: 3.75rem; */
      /* padding: 5.625rem 5.625rem 4.166625rem; */
      border-image-outset: 0;
      border-image-repeat: stretch stretch;
      border-style: solid;
    }
    /* @media only screen and (min-width: 940px) {
      .jw-relationships-preview[class*="jw-relationships-preview--frame"] {
        border-image-width: 5.625rem; /* 1.5x the above *
        padding: 8.4375rem 8.4375rem 6.2499375rem; /* 1.5x the above *
      }
    } */

    /* Gold Trim */
    .jw-relationships-preview.jw-relationships-preview--frame-gold-trim {
      border-image-slice: 84;
      border-image-source: url(https://cdn.shopify.com/s/files/1/0263/8148/4080/files/gold-trim-frame-border-10x10.jpg?v=1582079206);
    }

    /* Light Cherry */
    .jw-relationships-preview.jw-relationships-preview--frame-light-cherry {
      border-image-slice: 77;
      border-image-source: url(https://cdn.shopify.com/s/files/1/0263/8148/4080/files/light-cherry-frame-border-10x10.jpg?v=1582077467);
    }

    /* Black Roped */
    .jw-relationships-preview.jw-relationships-preview--frame-black-roped {
      border-image-slice: 65;
      border-image-source: url(https://cdn.shopify.com/s/files/1/0263/8148/4080/files/black-roped-frame-border-10x10.jpg?v=1582079316);
    }

    /* Black Walnut */
    /* Comes last to serve as default while other classes are preloaded */
    .jw-relationships-preview.jw-relationships-preview--frame-black-walnut {
      border-image-slice: 84;
      border-image-source: url(https://cdn.shopify.com/s/files/1/0263/8148/4080/files/black-walnut-frame-border-10x10.jpg?v=1581997784);
    }

    .jw-relationships-preview.jw-relationships-preview--frame-no-frame {
      border-image-slice: 84;
    }


  .jw-relationships-preview__content {
    -webkit-box-flex: 1;
    -ms-flex: 1;
    flex: 1;

    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;

    -webkit-transition: all .5s linear;
    -o-transition: all .5s linear;
    transition: all .5s linear;
  }

  [class*="__text"] {
    color: #111;
    text-shadow: .0625rem .0625rem 0 ivory;
    margin: 0 !important;
  }
    @media only screen and (min-width: 940px) {
      [class*="__text"] {
        font-size: .8rem;
      }
    }

  .jw-title {
    text-align: center;
    margin-top: 1rem;
  }
    .jw-title__text {
      font-family: inherit;
      border: none;
      padding: 0;
      font-size: 1rem;
    }
    .jw-title__text.jw-title__text--line2 {
      font-size: .9rem;
    }

  .jw-route {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
    .jw-route__origin,
    .jw-route__destination {
      display: inline-block;
      vertical-align: top;

      -webkit-transition: .125s linear top, .125s linear left, .125s linear right;
      -o-transition: .125s linear top, .125s linear left, .125s linear right;
      transition: .125s linear top, .125s linear left, .125s linear right;

      margin-top: 1rem;
    }
    .jw-route__origin {
      text-align: right;
      padding-right: 1rem;
    }
    .jw-route__destination {
      padding-left: 1rem;
    }

  .jw-map {
    font-family: 'Pacifico', cursive;
    background-repeat: no-repeat;
    background-size: cover;
    border: .1875rem solid #ad4448;
    min-height: 12.625rem;
    width: 100%;

    -webkit-box-flex: 1;
    -ms-flex: 1;
    flex: 1;

    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;

    -webkit-transition: background-image .25s linear;
    -o-transition: background-image .25s linear;
    transition: background-image .25s linear;
  }
    .jw-map.jw-map--color-paris-sage {
      background-image: url(https://cdn.shopify.com/s/files/1/1336/0641/files/EuM-Liner-Pari.png);
    }
    .jw-map.jw-map--color-empress-teal {
      background-image: url(https://cdn.shopify.com/s/files/1/1336/0641/files/EuM-Liner-Empr.png);
    }
    .jw-map.jw-map--color-palace-rosa {
      background-image: url(https://cdn.shopify.com/s/files/1/1336/0641/files/EuM-Liner-Pala.png);
    }
    .jw-map.jw-map--color-sea-spray-blue {
      background-image: url(https://cdn.shopify.com/s/files/1/1336/0641/files/EuM-Liner-SeaS.png);
    }
    .jw-map.jw-map--color-mayan-glow {
      background-image: url(https://cdn.shopify.com/s/files/1/1336/0641/files/EuM-Liner-Maya.png);
    }
    .jw-map.aspect-ratio:before {
      padding-top: calc(1151/1850 * 100%);
    }
    .jw-map__group {
      -webkit-box-flex: .5;
      -ms-flex: .5;
      flex: .5;

      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;

      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;

      -webkit-box-pack: justify;
      -ms-flex-pack: justify;
      justify-content: space-between;
    }
    .jw-map__row {
      position: relative;
    }
      .jw-map__row + .jw-map__row {}
  
  .jw-ship {
    text-align: center;

    -webkit-box-flex: 1;
    -ms-flex: 1;
    flex: 1;

    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;

    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
    .jw-ship__image-container {
      width: 100%;
      margin-top: 1rem;
      z-index: 1;
    } 
    .jw-ship__image {
      margin: 0 auto;
      display: block;
      width: 50%!important; /* Default width if imagery â†’ imageClassification is missing */
    }

    .jw-ship__image.border {
      border-style: solid; 
      border-width: 3px; 
      border-color: darkblue;
    }

      /* Jimaworks-made Sail Ship */
      .jw-ship__image.jw-ship__image--jimaworks-made-sail {
        width: 40%;
      }
      /* Jimaworks-made Steam-Sail Ship */
      .jw-ship__image.jw-ship__image--jimaworks-made-steam-sail {
        width: 65%;
      }
      /* Jimaworks-made Steam Ship */
      .jw-ship__image.jw-ship__image--jimaworks-made-steam {
        width: 75%;
      }
      /* Historic imagery - landscape */
      .jw-ship__image.jw-ship__image--historic-landscape {
        width: 55%;
      }
      /* Historic imagery - portrait */
      .jw-ship__image.jw-ship__image--historic-portrait {
        width: 55%;
      }
    .jw-ship__info {
/*      width: 100%;  */
      height: 17%; /* Must match `bottom` of .jw-ship__image-container */

      display: -webkit-box;
      display: -ms-flexbox;
      display: flex; /* TODO: vendor prefix */

      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;

      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;

      text-align: center;
      margin: 1rem auto;
    }

  .jw-plaque {
    border: .1875rem solid #ad4448;
    background-color: #ecc37e;
    text-align: center;
    max-width: 50%;
    max-height: 4.375rem;
    overflow: auto;
    margin: .625rem auto 0;
    padding: .15625rem;
  }
    .jw-plaque.aspect-ratio:before {
      padding-top: calc(298/640 * 100%);
    }
    .jw-plaque.jw-plaque--gem {
      max-width: 41.333333333333323%;
      max-height: 3.616666666666666rem;
    }
    .jw-plaque.jw-plaque--small {
      max-width: 50%;
      max-height: 4.375rem;
    }
    .jw-plaque.jw-plaque--medium {
      max-width: 60.66666666666665%;
      max-height: 5.308333333333332rem;
    }
    .jw-plaque.jw-plaque--large {
      max-width: 71.333333333333324%;
      max-height: 6.241666666666666rem;
    }
    @media only screen and (min-width: 940px) {
      .jw-plaque {
        max-height: 5.8333rem;
      }
    }

  .jw-relationships-preview-container [data-tour-spot][id] {
    -webkit-transition: all .5s linear;
    -o-transition: all .5s linear;
    transition: all .5s linear; /* slow unhighlight */
  }

  .jw-info {
    -webkit-box-shadow: 0 0 .625rem #05537a;
    box-shadow: 0 0 .625rem #05537a;

    cursor: default;
  }

  .jw-highlighted {
    -webkit-box-shadow: 0 0 .625rem #05537a;
    box-shadow: 0 0 .625rem #05537a;

    -webkit-transform: scale(1.5);
    -ms-transform: scale(1.5);
    transform: scale(1.5);

    -webkit-transition: all .25s linear;
    -o-transition: all .25s linear;
    transition: all .25s linear; /* fast highlight */

    line-height: 1.25;
    z-index: 999999;
  }
    .jw-highlighted.jw-highlighted--alter-box-style {
      padding: .625rem;
      background-color: rgba(255,255,255,0.75);
      border: .0625rem solid #05537a;
    }
    .jw-highlighted.jw-highlighted--retain-size {
      -webkit-transform: none;
      -ms-transform: none;
      transform: none;
    }

  .jw-relationships-preview-disclaimer {
    font-style: italic;
  }

  /* --- Tour Styles --- */
  /*
    These styles donâ€™t directly apply to the Preview, but to complementary components.
    TODO: Find a better home for them.
  */
  .jw-skip-to-project {
    display: inline-block;
    height: 32px;
    padding: 1px 7px 2px;
    /* background-color: white; */
  }

  .jw-link-button {
    color: white;
    background-color: #0081a3;
    padding: 1rem;
    border-radius: 0.3rem;
    position: relative;

    -webkit-box-shadow: 1px 1px 2px rgba(0,0,0,0.25);
    box-shadow: 1px 1px 2px rgba(0,0,0,0.25);
  }
    .jw-link-button:hover,
    .jw-link-button:focus,
    .jw-link-button:active {
      color: white;
      background-color: #006d8a;
    }
    .jw-link-button:active {
      top: 2px;
      left: 2px;
      
      -webkit-box-shadow: 0 0 2px rgba(0,0,0,0.25);
      box-shadow: 0 0 2px rgba(0,0,0,0.25);
    }

  .jw-more-info-link {
    font-size: 110%;
  }

  .jw-relationships-tour {
    margin-bottom: 0;
  }
  
  .jw-relationships-tour__actions {
    margin-bottom: .75rem;
  }

  .jw-relationships-tour__content {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
/*    -ms-flex-direction: column-reverse;
    flex-direction: column-reverse;
*/
    margin: 0;
    
    -webkit-transition: .125s linear width, .125s linear margin;
    -o-transition: .125s linear width, .125s linear margin;
    transition: .125s linear width, .125s linear margin;
    
    width: 100%;
    max-width: 100%;
  }
    /* .jw-relationships-tour__content.jw-relationships-tour__content--active {} */
    @media only screen and (min-width: 940px) {
      .jw-relationships-tour__content.jw-relationships-tour__content--active {
        -webkit-box-orient: horizontal;
        -webkit-box-direction: normal;
        -ms-flex-direction: row;
        flex-direction: row;
        
        margin: 0 -25%;
        min-width: 90vw;
      }
    }

  .jw-relationships-tour__map {
    -webkit-box-flex: 1;
    -ms-flex: 1;
    flex: 1;
  }

  .jw-relationships-tour__map.scale {
    transform: scale(1.25);
    transform-origin: top right;
  }

  .jw-relationships-tour__sidebar {
    -webkit-box-flex: .5;
    -ms-flex: .5;
    flex: .5;
    
    -webkit-transition: .125s ease height;
    -o-transition: .125s ease height;
    transition: .125s ease height;
    
    height: 0;
/*    display: none;
*/
  }
    @media only screen and (min-width: 940px) {
      .jw-relationships-tour__sidebar {
        padding-left: 1rem;
      }
    }
    .jw-relationships-tour__sidebar.jw-relationships-tour__sidebar--active {
      display: block;
      height: auto;
    }

  .jw-relationships-tour__navigation {
    margin-bottom: .75rem;
  }

  .jw-tour {
    height: 0;

    -webkit-transition: .125s ease height;
    -o-transition: .125s ease height;
    transition: .125s ease height;

    overflow: hidden;
  }
    @media only screen and (min-width: 940px) {
      .jw-tour {
        -webkit-transition: none;
        -o-transition: none;
        transition: none;
      }
    }

  .jw-tour__descriptions {
    -webkit-transition: .125s linear height;
    -o-transition: .125s linear height;
    transition: .125s linear height;

    position: relative;
  }
    .jw-tour__description {
      opacity: 0;

      -webkit-transition: .125s ease opacity;
      -o-transition: .125s ease opacity;
      transition: .125s ease opacity;

      position: absolute;
      top: 0;
    }
    .jw-tour__description.jw-tour__description--active {
      opacity: 1;
      z-index: 999999;
    }

  .--expanded {
    height: 100%;
  }

  .jw-tour__actions {
    position: relative;
    z-index: 9999;
  }
  /* .jw-tour__action {} */
  .--disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .jw-relationships-tour__enter-exit {
    -webkit-transition: .125s ease width;
    -o-transition: .125s ease width;
    transition: .125s ease width;
  }
</style>
<div class="jw-relationships-preview-container">
  <article
    id="frame"
    class="jw-relationships-preview jw-relationships-preview--frame-black-walnut jw-relationships-preview--size-small aspect-ratio"
    data-tour-spot
  >
    <div class="jw-relationships-preview__content">
      <div id="map-background" class="jw-map jw-map--color-paris-sage">

        <div id="map_image" 
          class="jw-map map_image jw-map--color-paris-sage" data-tour-spot
          style="opacity:0; position: absolute;height: 0; visibility: hidden;"></div>

        <div id="country-origin" 
          class="country-origin" data-tour-spot
          style="position:absolute;top: 5rem;right: 5rem;z-index: 1; opacity:0">
          {% include 'tour-map' %}
        </div>

        <div id="port-departure" 
          class="port-departure" data-tour-spot
          style="position:absolute;top: 5rem;right: 5rem;z-index: 2; opacity:0">
          {% include 'tour-star', width: '30px', height: '30px' %}
        </div>

        <div id="port-entry" 
          class="port-entry" data-tour-spot
          style="position:absolute;top: 12rem;left: 5rem;z-index: 2; opacity:0">
          {% include 'tour-star', width: '30px', height: '30px' %}
        </div>

        <div id="country-destination" 
          class="country-destination" data-tour-spot
          style="position:absolute;top: 12rem;left: 5rem;z-index: 1; opacity:0">
          {% include 'tour-map' %}
        </div>

        <div id="jw-route-custom"
          class="jw-route-custom" data-tour-spot
          style="position:absolute;z-index: 1; opacity:0;box-shadow: none;">
          {% include 'tour-route' %}
        </div>

        <div class="jw-map__group">
          <img 
              id="people_photo"  class="people_photo" data-tour-spot
              src="{{ 'people_photo.png' | asset_url }}"
              style="position: absolute;width: 100px; margin-left: auto;
                margin-right: auto;left: 0;right: 0;z-index: 10; opacity:0; visibility:hidden;"
              >

          <hgroup id="title-text-box" class="jw-title jw-map__row" data-tour-spot>
            <h3 id="title-line1" class="jw-title__text">The Family Crossing: First Generation</h3>
            <h3 id="title-line2" class="jw-title__text jw-title__text--line2" role="presentation">A Thread in the Great Tapistry that is America</h3>
            <h3 id="title-line3" class="jw-title__text jw-title__text--line3" role="presentation"></h3>
          </hgroup>
          <div class="jw-route jw-map__row">
            <div id="destination-text-box" class="jw-route__destination" data-tour-spot>
              <p id="destination-line1" class="jw-route__text">Arrival: A New World Port</p>
              <p id="destination-line2" class="jw-route__text">Destiny: An American Lineage</p>
            </div>
            <div id="origins-text-box" class="jw-route__origin" data-tour-spot>
              <p id="origin-line1" class="jw-route__text">Origin: The Old World</p>
              <p id="origin-line2" class="jw-route__text">Crossing: The North Atlantic</p>
            </div>
          </div>
        </div>
        <div class="jw-ship jw-map__row">
          <div id="ship" class="jw-ship__image-container" data-tour-spot>
            <img id="ship-image" 
              class="jw-ship__image jw-ship__image--jimaworks-made-steam" 
              src="https://cdn.shopify.com/s/files/1/1336/0641/files/jimaworksStPaul640.png" 
              alt="Ship" />
          </div>
          <div style="display:flex;">
            <div id="artist_acknowledgement" class="artist_acknowledgement" data-tour-spot>painting by H R Albrecht</div>
            <div id="ship-info-text-box" class="jw-ship__info" data-tour-spot>
              <p id="ship-info-line1" class="jw-ship__text">Typical Ship of this Era: 1200 Passengers</p>
              <p id="ship-info-line2" class="jw-ship__text">Typical Duration of Crossing: Two Weeks</p>
            </div>
            <div id="print_id" class="print_id" data-tour-spot>Jimaworks:203:04182020</div>
          </div>
          <img id="jw-sign" class="jw-sign" data-tour-spot
            src="{{ 'jima_sign.png' | asset_url }}"
            style="position: absolute;right: 0;bottom: 0;width: 50px;">
          <img id="jw-seascape" class="jw-seascape" data-tour-spot
            src="{{ 'seascape.png' | asset_url }}"
            style="position: absolute;width: 100%;bottom: 0;z-index: 0; opacity: 0; visibility: hidden;">
        </div>

      </div>
      <div class="jw-plaque-container">
        <div id="webPlaqueTextBoxDiv" class="jw-plaque jw-plaque--size-small" data-tour-spot>
          <p id="plaque-line1" class="jw-plaque__text">In Appreciation of</p>
          <p id="plaque-line2" class="jw-plaque__text">the Initiative and Courage of</p>
          <p id="plaque-line3" class="jw-plaque__text">Our Forebears Who First Crossed to America</p>
          <p id="plaque-line4" class="jw-plaque__text">#4</p>
          <p id="plaque-line5" class="jw-plaque__text">#5</p>
          <p id="plaque-line6" class="jw-plaque__text">#6</p>
          <p id="plaque-line7" class="jw-plaque__text">#7</p>
          <p id="plaque-line8" class="jw-plaque__text">#8</p>
        </div>
      </div>
    </div>
  </article>
  <p class="jw-relationships-preview-disclaimer">Mockup only. Final product may differ in appearance.</p>
</div>
<script>
  console.log( 'RelationShips Preview Redux initialized' );

  // window.addEventListener( "DOMContentLoaded", function relationshipsPreview__onDomContentLoaded() {
    window.Jimaworks = ( window.Jimaworks || {} );
    window.Jimaworks.Preview = ( window.Jimaworks.Preview || {} );

    Jimaworks.Preview.mapElements = {
      "frame": {
        "$element": document.getElementById( 'frame' ),
        "default": ( localStorage.getItem( 'FrameDefault' ) || 'BlackWalnut' ),
        "saved": localStorage.getItem( 'Frame' )
      },
      "size": {
        "$element": document.getElementById( 'frame' ),
        "default": ( localStorage.getItem( 'SizeDefault' ) || 'Medium' ),
        "saved": localStorage.getItem( 'Size' )
      },
      "mapBackground": {
        "$element": document.getElementById( 'map-background' ),
        "$element_tag" : document.getElementById( 'map_image' ),
        "default": ( localStorage.getItem( 'MapStyleDefault' ) || 'ParisSage' ),
        "saved": localStorage.getItem( 'MapStyle' )
      },
      "title": {
        "$element": document.getElementById( 'title-text-box' ),
        "fields": ["line1", "line2", "line3"],
        "line1": {
          "$element": document.getElementById( 'title-line1' ),
          "default": localStorage.getItem( 'TitleLine1Default' ),
          "saved": localStorage.getItem( 'TitleLine1' )
        },
        "line2": {
          "$element": document.getElementById( 'title-line2' ),
          "default": localStorage.getItem( 'TitleLine2Default' ),
          "saved": localStorage.getItem( 'TitleLine2' )
        },
        "line3": {
          "$element": document.getElementById( 'title-line3' ),
          "default": localStorage.getItem( 'TitleLine3Default' ),
          "saved": localStorage.getItem( 'TitleLine3' )
        }
      },
      "origins": {
        "$element": document.getElementById( 'origins-text-box' ),
        "fields": ["line1", "line2"],
        "line1": {
          "$element": document.getElementById( 'origin-line1' ),
          "default": localStorage.getItem( 'originsTextBoxL1Default' ),
          "saved": localStorage.getItem( 'originsTextBoxL1' )
        },
        "line2": {
          "$element": document.getElementById( 'origin-line2' ),
          "default": localStorage.getItem( 'originsTextBoxL2Default' ),
          "saved": localStorage.getItem( 'originsTextBoxL2' )
        }
      },
      "destination": {
        "$element": document.getElementById( 'destination-text-box' ),
        "fields": ["line1", "line2"],
        "line1": {
          "$element": document.getElementById( 'destination-line1' ),
          "default": localStorage.getItem( 'DestinyLine1Default' ),
          "saved": localStorage.getItem( 'DestinyLine1' )
        },
        "line2": {
          "$element": document.getElementById( 'destination-line2' ),
          "default": localStorage.getItem( 'DestinyLine2Default' ),
          "saved": localStorage.getItem( 'DestinyLine2' )
        }
      },
      "ship": {
        "$element": document.getElementById( 'ship' ),
        "fields": ["image", "infoLine1", "infoLine2"],
        "image": {
          "$element": document.getElementById( 'ship-image' ),
          "default": localStorage.getItem( 'shipPicDefault' ),
          "saved": localStorage.getItem( 'shipPic' )
        },
        "infoLine1": {
          "$element": document.getElementById( 'ship-info-line1' ),
          "default": localStorage.getItem( 'ShipInfoLine1Default' ),
          "saved": localStorage.getItem( 'ShipInfoLine1' )
        },
        "infoLine2": {
          "$element": document.getElementById( 'ship-info-line2' ),
          "default": localStorage.getItem( 'ShipInfoLine2Default' ),
          "saved": localStorage.getItem( 'ShipInfoLine2' )
        }
      },
      "artistcredit": {
          "$element": document.getElementById( 'artist_acknowledgement' ),
          "default": localStorage.getItem( 'ArtistInfoDefault' ),
          "saved": localStorage.getItem( 'ArtistInfo' )   
      },
      "printid": {
          "$element": document.getElementById( 'print_id' ),
          "default": localStorage.getItem( 'PrintIdDefault' ),
          "saved": localStorage.getItem( 'PrintId' )   
      },
      "plaque": {
        "$element": document.getElementById( 'webPlaqueTextBoxDiv' ),
        "fields": ["line1", "line2", "line3", "line4", "line5", "line6", "line7", "line8"],
        "line1": {
          "$element": document.getElementById( 'plaque-line1' ),
          "default": "In Appreciation of",
          "saved":  localStorage.getItem( 'PlaqueLine1' ),
        },
        "line2": {
          "$element": document.getElementById( 'plaque-line1' ),
          "default": "the Initiative and Courage of",
          "saved":  localStorage.getItem( 'PlaqueLine2' ),
        },
        "line3": {
          "$element": document.getElementById( 'plaque-line1' ),
          "default": "Our Forebears Who First Crossed to America",
          "saved":  localStorage.getItem( 'PlaqueLine3' ),
        },
        "line4": {
          "$element": document.getElementById( 'plaque-line1' ),
          "default": "#4",
          "saved":  localStorage.getItem( 'PlaqueLine4' ),
        },
        "line5": {
          "$element": document.getElementById( 'plaque-line1' ),
          "default": "#5",
          "saved":  localStorage.getItem( 'PlaqueLine5' ),
        },
        "line6": {
          "$element": document.getElementById( 'plaque-line1' ),
          "default": "#6",
          "saved":  localStorage.getItem( 'PlaqueLine6' ),
        },
        "line7": {
          "$element": document.getElementById( 'plaque-line1' ),
          "default": "#7",
          "saved":  localStorage.getItem( 'PlaqueLine7' ),
        },
        "line8": {
          "$element": document.getElementById( 'plaque-line1' ),
          "default": "#8",
          "saved":  localStorage.getItem( 'PlaqueLine8' ),
        },
      }
    };

    Jimaworks.Preview.shipImagery = {
      "jimaworksMade": [
        {
          "imagery": "Savannah_1818-1821_jimaworksmade300ppi.png",
          "imageClassification": "jimaworks-made-steam-sail"
        },
        {
          "imagery": "NieuwAmsterdam_1905-1932_jimaworksmade72ppi.png",
          "imageClassification": "jimaworks-made-steam-sail"
        },
        {
          "imagery": "Maasdam_1952-1968_jimaworksmade72ppi.png",
          "imageClassification": "jimaworks-made-steam-sail"
        },
        {
          "imagery": "Savannah_1962-1972_jimaworksmade72ppi.png",
          "imageClassification": "jimaworks-made-steam-sail"
        },
        {
          "imagery": "jimaworksStPaul640.png",
          "imageClassification": "jimaworks-made-steam"
        },
        {
          "imagery": "Ryndam_1951-1970_-mdlrend.png",
          "imageClassification": "jimaworks-made-steam-sail"
        }
      ],
      "knownShipPlaceholders": [
        {
          "imagery": "EarlySailKnownShipIconLabeled.png",
          "imageClassification": "jimaworks-made-steam-sail"
        },
        {
          "imagery": "ModernSailKnownShipIconLabeled.png",
          "imageClassification": "jimaworks-made-steam-sail"
        },
        {
          "imagery": "SteamSailKnownShipIconLabeled.png",
          "imageClassification": "jimaworks-made-steam-sail"
        },
        {
          "imagery": "ClassicPssgrLinerKnownShipIconLabeled.png",
          "imageClassification": "jimaworks-made-steam-sail"
        },
        {
          "imagery": "PssgrLinerKnownShipIconLabeled.png",
          "imageClassification": "jimaworks-made-steam-sail"
        },
        {
          "imagery": "AgeOfAirTravelKnownPlaneIconLabeled.png",
          "imageClassification": "jimaworks-made-steam-sail"
        },
        // Missing in original dataset:
        {
          "imagery": "Europa_1920-1960_-postcd.jpg",
          "imageClassification": "historic-landscape"
        }
      ]
    };
    
    Jimaworks.Preview.shipImageClassifications = [
      'jimaworks-made-steam-sail',
      'jimaworks-made-sail',
      'jimaworks-made-steam',
      'historic-landscape',
      'historic-portrait'
    ];

    Jimaworks.Preview.mapBackgroundToClassId = {
      "ParisSage": "paris-sage",
      "EmpressTeal": "empress-teal",
      "PalaceRosa": "palace-rosa",
      "SeaSprayBlue": "sea-spray-blue",
      "MayanGlow": "mayan-glow"
    };
    
    Jimaworks.Preview.frameToClassId = {
      "BlackWalnut": "black-walnut",
      "GoldTrim": "gold-trim",
      "LightCherry": "light-cherry",
      "BlackRoped": "black-roped",
      "NoFrame": "no-frame"
    };

    Jimaworks.Preview.sizeToClassId = {
      "Gem": "gem",
      "Small": "small",
      "Medium": "medium",
      "Large": "large"
    };

    Jimaworks.Preview.frameToDimensions = {
      "BlackWalnut": {
        "Gem": '15.5"x14.5"',
        "Small": '18.75"x16.875"',
        "Medium": '22.75"x19.25"',
        "Large": '26.75"x21.5"'
      },
      "GoldTrim": {
        "Gem": '13.5"x12.5"',
        "Small": '16.75"x14.875"',
        "Medium": '20.75"x17.25"',
        "Large": '24.75"x19.5"'
      },
      "LightCherry": {
        "Gem": '12.25"x11.25"',
        "Small": '15.5"x13.625"',
        "Medium": '19.5"x16"',
        "Large": '23.5"x18.25"'
      },
      "BlackRoped": {
        "Gem": '12"x11"',
        "Small": '15.25"x13.375"',
        "Medium": '19.25"x15.75"',
        "Large": '23.25"x18"'
      }
    };

    Jimaworks.Preview.frameToFilename = {
      /* Frames */
      "BlackWalnut": "black-walnut-frame-border-10x10.jpg?v=1581997784",
      "GoldTrim": "gold-trim-frame-border-10x10.jpg?v=1582079206",
      "LightCherry": "light-cherry-frame-border-10x10.jpg?v=1582077467",
      "BlackRoped": "black-roped-frame-border-10x10.jpg?v=1582079316"
    };

    Jimaworks.Preview.mapBackgroundToFilename = {
      "ParisSage": "EuM-Liner-Pari.png",
      "EmpressTeal": "EuM-Liner-Empr.png",
      "PalaceRosa": "EuM-Liner-Pala.png",
      "SeaSprayBlue": "EuM-Liner-SeaS.png",
      "MayanGlow": "EuM-Liner-Maya.png"
    };

    Jimaworks.Preview.formatDimensions = function formatDimensions( widthByHeight ) {
      return (
        widthByHeight
          .replace( /"/g, '\u2033' ) // replace double quotes with double prime
          .replace( /x/g, 'Ã—' )
      );
    };


    Jimaworks.Preview.setShipBackgroundBorder = function setShipBackgroundBorder() {
      var shipImgTransparentBackground = localStorage.shipImageTransparentBackground ;
      var element;
      if (shipImgTransparentBackground === "transparent") {
      }
      else {
          $element = Jimaworks.Preview.mapElements.ship.image.$element;
          $element.classList.add( 'border' );
      }
    }

    Jimaworks.Preview.populateDimensions = function populateDimensions( $select ) {
      var frame = Jimaworks.Preview.mapElements.frame.saved;

      if ( !Jimaworks.Preview.frameToDimensions.hasOwnProperty( frame ) ) {
        console.warn( 'Canâ€™t find physical dimensions for selected frame:', frame );
        frame = Jimaworks.Preview.mapElements.frame.default;
      }

      var $options = $select.querySelectorAll( 'option' );
      var frameDimensions = Jimaworks.Preview.frameToDimensions[frame];

      for ( var index = 0; index < $options.length; index++ ) {
        var $option = $options[index];
        var variantId = $option.getAttribute( 'data-variant-id' );
        
        if ( frameDimensions.hasOwnProperty( variantId ) ) {
          $option.textContent += ' (' + Jimaworks.Preview.formatDimensions( frameDimensions[variantId] ) + ')';
        } else {
          console.warn( 'Canâ€™t find physical dimensions for frame ' + frame + ', size ' + variantId );
        }
      }
    }

    Jimaworks.Preview.updateFrame = function updateFrame( frameStyle ) {
      Jimaworks.Preview._applyFrameClasses( Jimaworks.Preview.mapElements.frame.$element, frameStyle );
    };

    Jimaworks.Preview.updateSize = function updateSize( size ) {
      Jimaworks.Preview._applyFrameClasses( Jimaworks.Preview.mapElements.size.$element, size );
      Jimaworks.Preview._applyFrameClasses( Jimaworks.Preview.mapElements.plaque.$element, size );
    };

    Jimaworks.Preview.recordFrameChoice = function recordFrameChoice( variantId, url, variantAbbreviation ) {
      localStorage.setItem( "Frame", variantId );
      localStorage.setItem( "FrameImg", url );

      if ( variantAbbreviation && variantAbbreviation.length ) {
        localStorage.setItem( "FrameAbbrev", variantAbbreviation ); // Not used AFAICT
      } else {
        localStorage.removeItem( "FrameAbbrev" );
      }
    };

    Jimaworks.Preview.recordSizeChoice = function recordSizeChoice( variantId, variantAbbreviation ) {
      localStorage.setItem( "Size", variantId );

      if ( variantAbbreviation && variantAbbreviation.length ) {
        localStorage.setItem( "SizeAbbrev", variantAbbreviation ); // Not used AFAICT
      } else {
        localStorage.removeItem( "SizeAbbrev" );
      }
    };

    Jimaworks.Preview.recordMapBackground = function recordMapBackground( variantId, url, variantAbbreviation ) {
      // TODO: localStorage.webMapImg differs from localStorage.FrameImg
      // in that the former is only the filename and the latter is the complete URL.
      // Should probably make the API internally consistent.
      if ( url ) {
        url = url.substring( url.lastIndexOf( '/' ) + 1 );
      } else {
        url = Jimaworks.Preview.mapBackgroundToFilename[variantId];
      }

      localStorage.setItem( 'MapStyle', variantId );
      localStorage.setItem( 'webMapImg', url );

      if ( variantAbbreviation && variantAbbreviation.length ) {
        localStorage.setItem( 'MapStyleAbbrev', variantAbbreviation ); // Not used AFAICT
      } else {
        localStorage.removeItem( 'MapStyleAbbrev' );
      }
    };

    Jimaworks.Preview.updateMapBackground = function updateMapBackground( mapBackground ) {
      Jimaworks.Preview._applyMapBackgroundClasses( Jimaworks.Preview.mapElements.mapBackground.$element, Jimaworks.Preview.mapElements.mapBackground.$element_tag, mapBackground );
    };

    Jimaworks.Preview.updateShipImage = function updateShipImage( shipImageFileName ) {
      var $shipImage = Jimaworks.Preview.mapElements.ship.image.$element;
      var newShipImageClassification = Jimaworks.Preview.getShipImageClassification( shipImageFileName );

      if ( newShipImageClassification ) {
        $shipImage.src = ( Jimaworks.shopifyFilePrefix + shipImageFileName );
        $shipImage.addEventListener( 'error', function onShipImageError() {
          if ( Jimaworks.isDev ) {
            $shipImage.src = ( Jimaworks._shopifyFilePrefixProd + shipImageFileName );
            console.warn( 'Ship image `' + shipImageFileName + '` not available on Dev site; trying Production instead' );
          }

          $shipImage.removeEventListener( 'error', onShipImageError, false );
        }, false );

        Jimaworks.Preview._applyShipImageClasses( $shipImage, newShipImageClassification );
      } else {
        console.error( 'Couldnâ€™t get ship image classification for', shipImageFileName );
      }
    };

    Jimaworks.Preview.getShipImageClassification = function getShipImageClassification( shipImageFileName ) {

      console.log("shipImageFileName = " + shipImageFileName);

      for ( var i = 0; i < Jimaworks.Preview.shipImagery.jimaworksMade.length; i++ ) {
        var shipImage = Jimaworks.Preview.shipImagery.jimaworksMade[i];
        
        return "jimaworks-made-steam";

//        if ( shipImage.hasOwnProperty( 'imagery' ) && ( shipImage.imagery === shipImageFileName ) ) {
//          return shipImage.imageClassification;
//        }
      }

      for ( var i = 0; i < Jimaworks.Preview.shipImagery.knownShipPlaceholders.length; i++ ) {
        var shipImage = Jimaworks.Preview.shipImagery.knownShipPlaceholders[i];

        if ( shipImage.hasOwnProperty( 'imagery' ) && ( shipImage.imagery === shipImageFileName ) ) {
          return shipImage.imageClassification;
        }
      }

      return null;
    };

    Jimaworks.Preview._applyShipImageClasses = function _applyShipImageClasses( $shipImage, shipImageClassification ) {
      var classNameModifierBase = 'jw-ship__image--';
      var classNameModifierBaseRegex = new RegExp( classNameModifierBase );
      var newClassName = ( classNameModifierBase + shipImageClassification );

      if ( classNameModifierBaseRegex.test( $shipImage.className ) ) {
        for ( var index = 0; index < Jimaworks.Preview.shipImageClassifications.length; index++ ) {
          var className = ( classNameModifierBase + Jimaworks.Preview.shipImageClassifications[index] );
          
          $shipImage.classList.remove( className );
        }
      }

      $shipImage.classList.add( newClassName );
    }

    Jimaworks.Preview._applyMapBackgroundClasses = function _applyMapBackgroundClasses( $mapBackground, $mapBackground_tag, mapBackground ) {
      var classNameModifierBase = 'jw-map--color-';
      var classNameModifierBaseRegex = new RegExp( classNameModifierBase );

      var url = window.Jimaworks.shopifyFilePrefix + (localStorage.getItem("webMapImg")
            || localStorage.getItem("webMapImgDefault")
            || 'EuM-Liner-Pari.png'
        );

      console.log("---------------------------url = " + url);

      if ( Jimaworks.Preview.mapBackgroundToClassId.hasOwnProperty( mapBackground ) ) {
        var mapBackgroundClassId = Jimaworks.Preview.mapBackgroundToClassId[mapBackground];
        var newClassName = ( classNameModifierBase + mapBackgroundClassId );

        if ( classNameModifierBaseRegex.test( $mapBackground.className ) ) {
          for ( var currentmapBackground in Jimaworks.Preview.mapBackgroundToClassId ) {
            var className = ( classNameModifierBase + Jimaworks.Preview.mapBackgroundToClassId[currentmapBackground] );

            $mapBackground.classList.remove( className );
            $mapBackground_tag.classList.remove( className );
          }
        }

        $mapBackground.classList.add( newClassName );
        $mapBackground_tag.classList.add( newClassName );
      } else {
        console.error( 'Unsupported map background color scheme:', mapBackground );
      }


    }

    Jimaworks.Preview._applyFrameClasses = function _applyFrameClasses( $frameOrPlaque, frameStyle ) {
      var classNameModifierBase;
      var classNameModifierBaseRegex;
      var frameStyleClassId;
      var frameStyleIsSupported = false;
      var frameStyleList;
      var newClassName;

      if ( Jimaworks.Preview.frameToClassId.hasOwnProperty( frameStyle ) ) {
        classNameModifierBase = 'jw-relationships-preview--frame-';
        frameStyleList = 'frameToClassId';
      } else if ( Jimaworks.Preview.sizeToClassId.hasOwnProperty( frameStyle ) ) {
        if ( $frameOrPlaque === Jimaworks.Preview.mapElements.frame.$element ) {
          classNameModifierBase = 'jw-relationships-preview--size-';
          frameStyleList = 'sizeToClassId';
        } else if ( $frameOrPlaque === Jimaworks.Preview.mapElements.plaque.$element ) {
          classNameModifierBase = 'jw-plaque--size-';
          frameStyleList = 'sizeToClassId';
        }
      } else {
        console.error( 'Unsupported frame style:', frameStyle );
        return false;
      }

      classNameModifierBaseRegex = new RegExp( classNameModifierBase );
      frameStyleClassId = Jimaworks.Preview[frameStyleList][frameStyle];
      newClassName = ( classNameModifierBase + frameStyleClassId );

      if ( classNameModifierBaseRegex.test( $frameOrPlaque.className ) ) {
        for ( var currentFrameStyle in Jimaworks.Preview[frameStyleList] ) {
          var className = ( classNameModifierBase + Jimaworks.Preview[frameStyleList][currentFrameStyle] );

          $frameOrPlaque.classList.remove( className );
        }
      }

      $frameOrPlaque.classList.add( newClassName );
    }

    Jimaworks.Preview.getMapElementUpdateFunctionName = function getMapElementUpdateFunctionName( mapElementPath ) {
      // ship.image â†’ updateShipImage
      var mapElementPathParts = mapElementPath.split( '.' );
      var updateFunctionName = 'update';

      for ( var index = 0; index < mapElementPathParts.length; index++ ) {
        var mapElementPathPart = mapElementPathParts[index];
        
        updateFunctionName += mapElementPathPart.charAt( 0 ).toUpperCase() + mapElementPathPart.substring( 1 );
      }

      return updateFunctionName;
    }

    Jimaworks.Preview.updatePreview = function updatePreview( mapElementPath, $element, newValue ) {
      var mapElementUpdateFunctionName = Jimaworks.Preview.getMapElementUpdateFunctionName( mapElementPath );

      if ( typeof Jimaworks.Preview[mapElementUpdateFunctionName] === 'function' ) {
        Jimaworks.Preview[mapElementUpdateFunctionName]( newValue );
      } else {
        $element.textContent = newValue;
      }
    }

    Jimaworks.Preview._preloadImages = function _preloadImages( event ) {
      var filenameLookup;
      var loadedIndicator;
      var preloadHandler;
      var $select;

      switch ( event.target.name ) {
        case 'mapBackgroundSelection':
          filenameLookup = Jimaworks.Preview.mapBackgroundToFilename;
          loadedIndicator = 'mapBackgroundsLoaded';
          break;
        
        case 'frameSelection':
          filenameLookup = Jimaworks.Preview.frameToFilename;
          loadedIndicator = 'frameImagesLoaded';
          break;
      }

      for ( var variantId in filenameLookup ) {
        var filename = filenameLookup[variantId];
        var link = document.createElement( 'link' );

        link.rel = 'preload';
        link.href = Jimaworks.shopifyFilePrefix + filename;
        link.as = 'image';

        document.head.appendChild( link );
      }

      Jimaworks.Preview[loadedIndicator] = true;

      event.target.removeEventListener( 'mouseover', Jimaworks.Preview._preloadImages, false );
      event.target.removeEventListener( 'click', Jimaworks.Preview._preloadImages, false );
    };

    Jimaworks.Preview.frameImagesLoaded = false;
    Jimaworks.Preview.preloadFrameImages = function preloadFrameImages( $frameSelection ) {
      $frameSelection.addEventListener( 'mouseover', Jimaworks.Preview._preloadImages, false );
      $frameSelection.addEventListener( 'click', Jimaworks.Preview._preloadImages, false );
    };

    Jimaworks.Preview.mapBackgroundsLoaded = false;
    Jimaworks.Preview.preloadMapBackgrounds = function preloadMapBackgrounds( $mapBackgroundSelection ) {
      $mapBackgroundSelection.addEventListener( 'mouseover', Jimaworks.Preview._preloadImages, false );
      $mapBackgroundSelection.addEventListener( 'click', Jimaworks.Preview._preloadImages, false );
    };

    Jimaworks.Preview.getSelectedOption = function getSelectedOption( $select ) {
      return $select.querySelector( ':checked' );
    }

    Jimaworks.Preview.getVariantIdFromOption = function getVariantIdFromOption( $option ) {
      return ( $option.dataset ? $option.dataset.variantId : $option.getAttribute( 'data-variant-id' ) );
    }

    Jimaworks.Preview.selectOptionWithVariantId = function selectOptionWithVariantId( $select, variantId ) {
      var $option = $select.querySelector( '[data-variant-id="' + variantId + '"]' );

      if ( $option ) {
        $option.selected = true;
      }
    }

    Jimaworks.Preview.alignPreviewWithSavedCustomizations = function alignPreviewWithSavedCustomizations() {
      for ( var mapElementKey in Jimaworks.Preview.mapElements ) {
        var mapElement = Jimaworks.Preview.mapElements[mapElementKey];

        if ( mapElement.hasOwnProperty( 'fields' ) && mapElement.fields.length ) {
          for ( var index = 0; index < mapElement.fields.length; index++ ) { // line1, line2, etc.
            var fieldName = mapElement.fields[index];
            var field = mapElement[fieldName];
            var mapElementPath = mapElementKey + '.' + fieldName;

            if ( field.saved && ( field.saved !== field.default ) ) {
              Jimaworks.Preview.updatePreview( mapElementPath, field.$element, field.saved );
            }
          }
        } else {
          if ( mapElement.saved && ( mapElement.saved !== mapElement.default ) ) {
            Jimaworks.Preview.updatePreview( mapElementKey, mapElement.$element, mapElement.saved );
          }
        }
      }
    };

    Jimaworks.Preview.executeCallbacks = function executeCallbacks() {
      if ( Jimaworks.Preview._callbackQueue && Jimaworks.Preview._callbackQueue.length ) {
        console.log( 'Running Preview callbacks...' );
        for ( var index = 0; index < Jimaworks.Preview._callbackQueue.length; index++ ) {
          var callback = Jimaworks.Preview._callbackQueue[index];
          callback();
        }
      }
    };

    Jimaworks.Preview.alignPreviewWithSavedCustomizations();
    Jimaworks.Preview.executeCallbacks();
  // }, false );

  $(document).ready(function(){
    var offsetHeight = document.getElementById('map-background').offsetHeight;
    console.log("................................offsetHeight = " + offsetHeight);

    var style = "opacity:0; position: absolute;top: 0;left: 0;height:" + offsetHeight + "px"
    document.getElementById('map_image').setAttribute("style", style);
  });
</script>