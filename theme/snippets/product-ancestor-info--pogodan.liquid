<!-- #2.1 Dynamic flow jima edit 18-09/product-ancestor-info--pogodan.liquid
    product-ancestor-info--pogodan.liquid 
    
    Mar 10 2019:1545  Start to align localStorage, liquid, and external order variable names
    Mar 11 2019:1000  Aligned all current external variables, added OrderDate variable.
    Mar 13 2019:2100  Bring the ArrivalPort and DeparturePort variables into the order.
    Jun 20 2019:0845  Align the text to the new interaction model.
    // ### Still hav seascape and Routes vars to deal with. ###
--> 

{%- assign dates = shop.metafields.automatik.map_years | split: "," -%}
{%- assign months =  "January,February,March,April,May,June,July,August,September,October,November,December" | split: "," -%}
     
<!-- 
<p>Page Title of the current page = {{page_title}} </p>
<p>The Product Title of the current product = {{product.title}} </p>
<p>The variants of the current product: {{product.variants}} </p>
-->

<script type="text/javascript">// <![CDATA[
function ProductMockup() {
/*
    alert("in ProductMockup") ;
*/
    var previewPage = 'https://jimaworks.com/pages/testpage' ;
/*
    alert("this worked: https://jimaworks.com/pages/testpage") ;
    alert("previewPage == "+previewPage) ;
*/
    /*location.replace(previewPage) ;*/
    window.location.assign(previewPage) ;
}
// ]]></script>

    
<img    src="https://cdn.shopify.com/s/files/1/1336/0641/files/EnobrasUnderConstruction.gif" 
                alt="Site Under Construction"
                style="display:block; position:absolute; top:0px; left:0px; width:60px; height:60px;"
                />

    <script type="text/javascript">
      var origins = localStorage.RegionOfOrigin;
      var Era = localStorage.Era;
      var prodTitle = "{{ product.title }}";
      var currentVariant = "{{product.selected_or_first_available_variant.id}}";
      var option = "{{product.selected_or_first_available_variant.option1}}";
      var frame = "{{product.selected_or_first_available_variant.option2}}";
    
        var shipImgTransparentBackground = localStorage.shipImageTransparentBackground ;
        var shipBorder ;
        if (shipImgTransparentBackground === "transparent") {
            shipBorder = "" ;
        }
        else {
            shipBorder = 'border-style: solid; border-width: 3px; border-color: darkblue; ' ;
        } ;

      console.log('origins =' + origins);
      console.log('title = ' + prodTitle);
      console.log('current variant = ' + currentVariant);
      console.log('frame = ' + frame) ;
      console.log('shipImgTransparentBackground = ' + shipImgTransparentBackground) ;
      console.log('shipBorder = ' + shipBorder) ;
    </script>
    
    <script type="text/javascript">
          var currentProductDescription = "{{product.selected_or_first_available_variant.description}}";
          console.log('product.selected_or_first_available_variant.description = ' + currentProductDescription) ;
    </script>
    <script type="text/javascript">
          var currentProductDescription = "{{selected_or_first_available_variant.description}}";
          console.log('selected_or_first_available_variant.description = ' + currentProductDescription) ;
    </script>
    <script type="text/javascript">
          var currentProductDescription = "{{product.description}}";
          console.log('product.description = ' + currentProductDescription) ;
    
        if (currentProductDescription.match(/Paris/g)) {res='True'} 
        else {res='false'};
        
        console.log('match to \"Paris\"?' + res) ;  
    </script>
    
    <script type="text/javascript">
          var currentProductDescription = "{{product.selected_or_first_available_variant.title}}";
          console.log('product.selected_or_first_available_variant.title = ' + currentProductDescription) ;
    </script>
    <script type="text/javascript">
          var currentProductDescription = "{{selected_or_first_available_variant.title}}";
          console.log('selected_or_first_available_variant.title = ' + currentProductDescription) ;
    </script>
    <script type="text/javascript">
          var currentProductDescription = "{{product.title}}";
          console.log('product.title = ' + currentProductDescription) ;
    
        if (currentProductDescription.match(/Paris/g)) {res='True'} 
        else {res='false'};
        
        console.log('match to \"Paris\"?' + res) ;  
    </script>
    
    <script type="text/javascript">
          var currentProductDescription = "{{product.selected_or_first_available_variant.tags}}";
          console.log('product.selected_or_first_available_variant.tags = ' + currentProductDescription) ;
    </script>
    <script type="text/javascript">
          var currentProductDescription = "{{selected_or_first_available_variant.tags}}";
          console.log('selected_or_first_available_variant.tags = ' + currentProductDescription) ;
    </script>
    <script type="text/javascript">
          var currentProductDescription = "{{product.tags}}";
          console.log('product.tags = ' + currentProductDescription) ;
    
        if (currentProductDescription.match(/Paris/g)) {res='True'} 
        else {res='false'};
        
        console.log('match to \"Paris\"?' + res) ;

    </script>

    
        <div id="DisplayOverlays">
    
        <script type="text/javascript">
            /*
            ### seems pretty dangerous to lock in these file prefixes and suffixes... ###
                Is there a better way to do this in liquid so can just use the filename (e.g., "GoldRatio-Med-Black-NoRuler-640pxW.png")?
                (BTW, the plan is to generate the filenames from the customer's choices, e.g., "GoldRatio+Med+Walnut" etc)
            */
            var shopifyFilePrefix = "https://cdn.shopify.com/s/files/1/1336/0641/files/"
            var shopifyFileSuffix = "?16338137725744926710"
    
            // var webFrame = "{{product.selected_or_first_available_variant.option2}}" ;
            var webFrame = localStorage.Frame ;
            if (webFrame == "BlackRoped") {
                webFrameImg = shopifyFilePrefix + "GoldRatio-Med-Black-NoRuler-640pxW.png" + shopifyFileSuffix ;
                }
            else if (webFrame == "BlackWalnut") {
                webFrameImg = shopifyFilePrefix + "GoldRatio-Med-Walnut-NoPlaque-NoRuler-72ppi.png.png" + shopifyFileSuffix ;
            }
            else if (webFrame == "LightCherry") {
                webFrameImg = shopifyFilePrefix + "GoldRatio-Med-Cherry-NoRuler-72ppi.png" + shopifyFileSuffix ;
                }
            else if (webFrame == "GoldTrim") {
                webFrameImg = shopifyFilePrefix + "GoldRatio-Med-Gold-NoRuler-72ppi.png" + shopifyFileSuffix ;
                }
            else if (webFrame == "NoFrame") {
                webFrameImg = shopifyFilePrefix + "GoldRatio-Med-NoFrame-NoPlaque-NoRuler-72ppi.png" + shopifyFileSuffix ;
                }
            else {
                webFrameImg = shopifyFilePrefix + "GoldRatio-Med-Black-NoRuler-640pxW.png" + shopifyFileSuffix ;
                } ;

            /*
             alert("previousRegime webFrame=="+webFrame+" vs localStorage.Frame=="+localStorage.Frame+"; webFrameImg=="+webFrameImg+" vs localStorage.FrameImg=="+localStorage.FrameImg) ;
             */
            var webMapImgName = localStorage.webMapImg ;
            var webMapImg =     "\'" + shopifyFilePrefix  + webMapImgName + "\'" ;
    
            var webShipImgName = localStorage.shipPic ;      
            var webShipImg =    "\'"
                                + shopifyFilePrefix
                                + webShipImgName.replace("(","_").replace(")","_")  /* ### (need to formalize these image names) ### */
                                + "\'"
        option = "AddSeaScape" ;   
        if (option === "AddSeaScape") {
            /*seaScapeImg = "https://cdn.shopify.com/s/files/1/1336/0641/files/Ocean7Cropped640W.png?10959405084462869905" ;*/
            seaScapeImgName = "Ocean7Cropped640W.png" ;
            var seaScapeImg =    "\'"
                                + shopifyFilePrefix
                                + seaScapeImgName.replace("(","_").replace(")","_")  /* ### (need to formalize these image names) ### */
                                + "\'" ;
        }
        else {
            var seaScapeImg = "" ;
        } ;

            ImgOverlayPrelude = "" ;
            webMapImgWidth = 400 ;
            webMapImgTopPos = 40 ;
            webMapImgLeftPos = 40 ;
            
            /* Will be adding additional image components, e.g., seascapes and routes... */
            /* ( and will be working those out on a separate page) */
            /* ### how to can I get this to update automatically when the visitor changes options?  ### */
            console.log('webFrame = ' + webFrame);
            console.log('webMapImg = ' + webMapImg);
            console.log('webShipImg = ' + webShipImg);
/*             
<input type="number" id="webMapImgWidth" value=webMapImgWidth>
<p>Width of background MapImg?</p>        
<input type="number" id="webMapImgTopPos" value=webMapImgTopPos>
<p>Top of background MapImg (relative to...?)</p>
<input type="number" id="webMapImgLeftPos" value=webMapImgLEftPos>
<p>Left of background MapImg (relative to...?)</p>

            var ImgOverlayPrelude = '<input type=\"number\" id=\"webMapImgWidth\" value='+webMapImgWidth+'>' ;
                ImgOverlayPrelude += '<p>Width of background MapImg?</p>' ;         
*/        
  
/*             
            var ImgOverlayHTML = '<div style=\"position: relative; top:' + webMapImgTopPos + 'px; left:' + webMapImgLeftPos + 'px; z-index: 0;\">' ;
                ImgOverlayHTML +=   '<img src=' + webMapImg ;
                ImgOverlayHTML +=   'class=\"map\" style=\"width: ' + webMapImgWidth + 'px; height: auto;\" />' ;
*/        
            var ImgOverlayHTML = '<div style=\"position: relative; top: 60px; left: -300px; z-index: 0;\">' ;
                ImgOverlayHTML +=   '<img src=' + webMapImg ;
                ImgOverlayHTML +=   'class=\"map\" style=\"width: 225px; height: auto;\" />' ;
           
                ImgOverlayHTML +=   '<div style=\"position: absolute; top: -35px; left: -35px; z-index: 10;\">' ;
                ImgOverlayHTML +=     '<img src=' + webFrameImg ;
                ImgOverlayHTML +=     'class=\"frame\" width=\"640px\" height=\"auto\"' ;
                ImgOverlayHTML +=     'style=\"width: 280px; maxwidth: 25%; height: auto;\" />' ;
                ImgOverlayHTML +=   '</div>' ;

/*
                ImgOverlayHTML +=   '<div style=\"position: absolute; top: 95px; left: 0px; z-index: 4;\">' ;
                ImgOverlayHTML +=     '<img src=' + seaScapeImg ;
                ImgOverlayHTML +=     'class=\"seaScape\" width=\"80px\" height=\"20px\"' ;
                ImgOverlayHTML +=     'style=\"width: 200px; maxwidth: 40px; height: auto;\" />' ;
                ImgOverlayHTML +=   '</div>' ;
*/
    
                ImgOverlayHTML +=   '<div style=\"position: absolute; bottom: 25px; left: 70px; z-index: 2;\">' ;
                ImgOverlayHTML +=     '<img src=' + webShipImg ;
                ImgOverlayHTML +=     'class=\"ship\" width=\"70px\" height=\"auto\"' ;
                ImgOverlayHTML +=     'style=\"' ;
                ImgOverlayHTML +=     'width: 70px maxwidth:25%; height: auto; ' ;
                ImgOverlayHTML +=     shipBorder ;
                ImgOverlayHTML +=     '\" />' ;
                ImgOverlayHTML +=   '</div>' ;
    
                ImgOverlayHTML += '</div>' ;
        
        window.addEventListener('DOMContentLoaded', function () {
            document.getElementById("DisplayOverlays").innerHTML = ImgOverlayPrelude+ImgOverlayHTML;
        });

        </script>    
    </div> 
    
<!--
    <h2>2b/2c/2d: Finalize the Look and Feel of your display.</h2>
        <p>Finish defining the basic appearance of the display
             by choosing the combination of <em>Options</em> 
             and <em>Frame</em> you would like with your <em>Mapstyle</em>, and chose a <em>Size</em> for it.  
             When you finish selecting all three, the display will change to reflect your selections.</p>
 -->
    <h2>Finalize the Look and Feel of your display and fill in your Plaque.</h2>
        <p>Choose a size 
            (see "Product Sizes" in the Help menu for illustration of sizes), 
            and add relevant photos, maps, etc. as custom inserts
            (two levels of insertss - we'll work with you to get the look right).  
        </p>

    <div id="accordion2" style="background: aliceblue" class="accordion">
      <h3 style="border: 1px solid #05537a; background-color: #05537a; color:#fff">Size and Extras</h3>
      <div>
            <h2>Select Options:</h2>
            <p>These are the only options that affect the price of this version of the RelationShip product. You can always come back and change them later.</p>
            
        <select name="id" id="productSelect" class="product-single__variants">
          {%- for variant in product.variants -%}
            {%- if variant.available -%}
              <option  data-sku="{{ variant.sku }}" value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>
            {%- else -%}
              <option disabled="disabled">
                {{ variant.title }} - {{ 'products.product.sold_out' | t }}
              </option>
            {%- endif -%}
          {%- endfor -%}
    
        </select>
        <!-- ### start jimaworks edit.  Rm "Proof only" option 
            <div class="selector-wrapper">
                <p class="color-highlight"><strong>Still unsure?</strong> Choose "Proof Only" for each of the options to receive your proof for only $10.</p>
            </div>
           ### end jimaworks edit.  Rm "Proof only" option -->
        </div>
      </div>          
    
    <hr>
    
    <h2>Fill in your Plaque.  Have more detail? Personalize any/all of your text boxs to your heart's content with the customization options below.</h2>

    <p>We've used the information from your "Setting the Stage" responses to pre-fill your personalizations with some suggested text for you, however we encourage you to change the text to reflect the specifics of your story.</p>
        
    
    <div id="accordion"  class="accordion">
    
        <h3>Your Title</h3>
        <!-- 
        https://jimaworks.com/pages/what-made-them-leave-their-homeland
        
        <a href="//cdn.shopify.com/s/files/1/1336/0641/files/NAtlantic-Liner.png" 
           data-lightbox="jimaworks-gallery"
           data-title="Representative map of the Era of the Passenger Liner (1890-1970). &lt;a href='0-4-look-and-feel-whats-known-to-be-shown'&gt;Click here&lt;/a&gt; to chose this time period">
           <img src="//cdn.shopify.com/s/files/1/1336/0641/files/NAtlantic-Liner.png" 
                alt="Europe and Med, Era of the Passenger Liner, in Paris Sage" />
        </a>
        <p><a href="https://jimaworks.com/pages/what-made-them-leave-their-homeland" 
            a="" 
            Title Text Box Hints and Tips
        </a></p>    
    <button type="button" onclick="https://jimaworks.com/pages/what-made-them-leave-their-homeland">Title Text Box Hints and Tips</button>
        
        -->
        <div>
            <input type="hidden" id="order-date" class="member" name="properties[Date]" value="today">
            <input type="hidden" id="map-style" class="member" name="properties[MapStyle]" value="ParisSage">
            <input type="hidden" id="time-period" class="member" name="properties[TimePeriod]" value="EraOfThePassengerLiner(1895-1970)">
            <input type="hidden" id="region-of-origin" class="member" name="properties[Region]" value="EuropeAndTheMediterranean">
            <input type="hidden" id="routes" class="member" name="properties[Routes]" value="(not used)">
            <input type="hidden" id="ship-name" class="member" name="properties[ShipName]" value="today">
            <input type="hidden" id="departure-port" class="member" name="properties[DeparturePort]" value="today">
            <input type="hidden" id="arrival-port" class="member" name="properties[ArrivalPort]" value="today">
            <input type="hidden" id="sea-scape" class="member" name="properties[SeaScape]" value="today">
            <input type="hidden" id="frame" class="member" name="properties[Frame]" value="BlackWalnut">
            <input type="hidden" id="size" class="member" name="properties[Size]" value="Medium">
            <input type="hidden" id="year" class="member" name="properties[Year]" value="1907">
            <div id="setUpOrder"></div>
            <!-- <input type="hidden" id="custId" name="custId" value="3487">  -->
            <script>
                var orderDate = new Date ;
                var orderMonth = orderDate.getMonth() ;
                var orderYear = orderDate.getFullYear() ;
                var orderDay = orderDate.getDate() ;
                var orderDate = orderMonth+"/"+orderDay+"/"+orderYear ;
                //orderDateStr = '<input type="hidden" id="order-date" class="member" name="properties[PlaqueLine8]" value="' ;
                //orderDateStr += orderDate ;
                //orderDateStr += '">' ;
                //document.getElementById("setUpOrder").innerHTML = orderDateStr ;
                document.getElementById("order-date").value = orderDate ;
                document.getElementById("map-style").value = localStorage.MapStyle ;
                document.getElementById("time-period").value = localStorage.Era ;
                document.getElementById("region-of-origin").value = localStorage.RegionOfOrigin ;
                document.getElementById("routes").value = localStorage.Routes ;
                document.getElementById("ship-name").value = localStorage.shipName ;
               document.getElementById("departure-port").value = localStorage.departurePort ;
               document.getElementById("arrival-port").value = localStorage.arrivalPort ;
            //    document.getElementById("seascape").value = localStorage.seascape ;
               document.getElementById("frame").value = localStorage.Frame ;
               document.getElementById("size").value = localStorage.Size ;
                   document.getElementById("year").value = localStorage.YearOfCrossing ;
            </script>
            <h2>Confirm &amp; Edit Title Information</h2>
            <p>You are free to customize this text however you wish.</p>
            <div class="grid--full">
            <div class="grid__item one-half small--one-whole">  
                    <p class="subtitle">
                        Title TextBox.  3 lines. Pre-entered text shown.  Click 
                        <a href="https://jimaworks.com/pages/what-made-them-leave-their-homeland" 
                            a=""
                            style="color:red">
                            <em>Here</em>
                        </a>
                        for Title TextBox Hints and Tips
                    </p>

                    <div class="input_fields_wrap">
                      <div>
                            <!-- <label for"origins-line-1">Title Line1, e.g., Family name</label> -->
                            <!--  in name="properties[_Title Textbox Line 1]" underscore hides this from the user in Cart and Checkout --> 
                            <input  type="text" id="title-line-1" class="member" name="properties[TitleLine1]" 
                                    value="Our Family's Atlantic Crossing" 
                                    title="Enter a suitably evocative Title for your story such as '[Your Last Name] Family Immigration', or just leave it at: 'Our Family's Atlantic Crossing'">
                            <!-- <label for"origins-line-1">Title Line2.</label> -->
                            <input  type="text" id="title-line-2" class="member" name="properties[TitleLine2]" 
                                    value="A Thread in the Great American Tapestry" 
                                    title="We suggest a description of the time and duration of the trip, but you can put in anything, or just leave it as: 'A Thread in the Great American Tapestry'.">
                            <!-- <label for"origins-line-1">Title Line3.</label> -->
                            <input  type="text" id="title-line-3" class="member" name="properties[TitleLine3]"
                                    title="Optional" placeholder="Optional Extra Line">
                            <script>
                                if(localStorage.TitleLine1==undefined) {
                                    document.getElementById("title-line-1").value="" ;
                                }
                                else {
                                    document.getElementById("title-line-1").value=localStorage.TitleLine1 ;
                                }
                                if(localStorage.TitleLine2==undefined) {
                                    document.getElementById("title-line-2").value="" ;
                                }
                                else {
                                    document.getElementById("title-line-2").value=localStorage.TitleLine2 ;
                                } ;
                                if(localStorage.TitleLine3==undefined) {
                                    document.getElementById("title-line-3").value="" ;
                                }
                                else {
                                    document.getElementById("title-line-3").value=localStorage.TitleLine3 ;
                                } ;
                            </script>
                        </div>
                    </div>
                </div>
            <div class="grid__item one-half small--one-whole">  
                    <p></p> <!-- hack to align left and right material -->
                    <p></p> <!-- hack to align left and right material -->
                    <p class="subtitle">Title TextBox Examples.</p>
                    <p><a class="bordered-image" target="_blank" href="https://cdn.shopify.com/s/files/1/1336/0641/files/001Col_IndepEra1630MayanGlowWintrhop_6f51dd60-78dd-4ed5-ab10-76b45e1b360f_1024x1024.png"><img src="{{ 'Title2.png' | asset_img_url: '350x' }}"/></a></p>
                    <p><a class="bordered-image" target="_blank" href="https://cdn.shopify.com/s/files/1/1336/0641/files/003EraOfTheSteamSailShip1860PalaceRosaPresidentDrw_1024x1024.png"><img src="{{ 'Title1.png' | asset_img_url: '350x' }}"/></a></p>
                    <p><a class="bordered-image" target="_blank" href="https://cdn.shopify.com/s/files/1/1336/0641/files/001Col_IndepEra1815EmpressTealFreidreichPtg_10d3ace8-6f4d-47bd-acaf-74ec424cde14_1024x1024.png"><img src="{{ 'Title3.png' | asset_img_url: '350x' }}"/></a></p>
                </div>
            </div>
        </div>  
    
        <h3>Origin</h3>
        <!-- 
        https://jimaworks.com/pages/what-country-did-they-come-from
        https://jimaworks.com/pages/what-port-did-they-leave-from
        -->
        <div>
            <h2>Departure Country / Port</h2>
            <p>You are free to customize this text however you wish.</p>
          <div class="grid--full">
            <div class="grid__item one-half small--one-whole">  
                    <p class="subtitle">
                        Origins TextBox.  2 lines. Pre-entered text shown.  Click 
                        <a href="https://jimaworks.com/pages/what-country-did-they-come-from" a=""
                            style="color:red">
                            <em>Here</em>
                        </a>
                        for Origins TextBox Hints and Tips
                    </p>
                    <div class="input_fields_wrap">
                      <div id="departure">
                            <!-- <label for"origins-line-1">Origins Line 1, e.g., Country of Origin</label> -->
                            <input  type="text" 
                                    id="origins-line-1" 
                                    class="member" 
                                    name="properties[OriginsLine1]" 
                                    value="Origins: The Old World" 
                                    title="We suggest the first line be the Country of Origin, but you can put in anything, or just leave it as 'Origins: The Old World'"
                             >
                            <!-- <label for"trailer-line-2">Origins Line 2, e.g., Departure Port</label> -->
                            <!--
                                    replaced    placeholder="Crossing: The North Atlantic"
                                    with        value="Crossing: The North Atlantic"
                              -->
                            <input  class="typeahead"
                                    id="origins-line-2"
                                    type="text" 
                                    name="properties[OriginsLine2]" 
                                    title="You can put in anything as the second line, but we suggest it be the Port of Departure or just select: 'Crossing: The North Atlantic'" 
                                    value="Crossing: The North Atlantic"
                             >
                            <p class="help-text">Start typing to see a list of suggested ports or write in your own. If you completed the date section we will only suggest ports that match those dates.</p>
                            <script>
                                window.addEventListener('DOMContentLoaded', function () {
                                    var originsTextBoxL1 = localStorage.getItem('originsTextBoxL1');
                                    // var originsTextBoxL2 = localStorage.getItem('originsTextBoxL2');
                                    var originsTextBoxL2 = localStorage.getItem('OriginsLine2');
                                    var originsLine1 = document.getElementById("origins-line-1");
                                    var originsLine2 = document.getElementById("origins-line-2");

                                    if ( originsLine1 ) {
                                        if ( originsTextBoxL1 === null ) {
                                            originsLine1.value = "";
                                        } else {
                                            originsLine1.value = originsTextBoxL1;
                                        }
                                    }

                                    if ( originsLine2 ) {
                                        if ( originsTextBoxL2 === null ) {
                                            originsLine2.value = "";
                                        } else {
                                            originsLine2.value = originsTextBoxL2;
                                        } ;
                                    }
                                });
                            </script>
                        </div>
                    </div>
                </div>
            <div class="grid__item one-half small--one-whole">  
                    <p class="subtitle">Origins TextBox Examples.</p>
                    <p><a class="bordered-image" target="_blank" href="https://cdn.shopify.com/s/files/1/1336/0641/files/001Col_IndepEra1630MayanGlowWintrhop_6f51dd60-78dd-4ed5-ab10-76b45e1b360f_1024x1024.png"><img src="{{ 'Origin2.png' | asset_img_url: '350x' }}"/></a></p>
                    <p><a class="bordered-image" target="_blank" href="https://cdn.shopify.com/s/files/1/1336/0641/files/003EraOfTheSteamSailShip1860PalaceRosaPresidentDrw_1024x1024.png"><img src="{{ 'Origin1.png' | asset_img_url: '350x' }}"/></a></p>
                    <p><a class="bordered-image" target="_blank" href="https://cdn.shopify.com/s/files/1/1336/0641/files/001Col_IndepEra1815EmpressTealFreidreichPtg_10d3ace8-6f4d-47bd-acaf-74ec424cde14_1024x1024.png"><img src="{{ 'Origin3.png' | asset_img_url: '350x' }}"/></a></p>
                </div>
            </div>              
        </div>
    
        <h3>Destination</h3>
        <!-- 
        https://jimaworks.com/pages/where-did-they-land
        https://jimaworks.com/pages/where-did-they-end-up
        -->
        <div>
            <h2>Arrival City / Port</h2>
            <p>You are free to customize this text however you wish.</p>
          <div class="grid--full">
            <div class="grid__item one-half small--one-whole">  
                    <p class="subtitle">
                        Arrival TextBox.  2 lines. Pre-entered text shown.  Click 
                        <a href="https://jimaworks.com/pages/where-did-they-land" a=""
                            style="color:red">
                            <em>Here</em>
                        </a>
                        for Arrival TextBox Hints and Tips
                    </p>
                    <div class="input_fields_wrap">
                      <div id="arrival">
                            <!-- <label for"trailer-line-3">Port of Entry</label> -->
                            <!-- ### ??? trailer-line-3 and no arrival-line-1? ### -->
                            <input class="typeahead" id="trailer-line-3" type="text" name="properties[DestinationLine1]" title="We suggest the first line be the Port of Entry, but you can put in anything, or just leave it as: 'Arrival: A New World Port'" placeholder="Arrival: A New World Port">
                            <p class="help-text">Start typing to see a list of suggested ports or write in your own. If you completed the date section or chose a suggested origin port, we will suggest only ports that match that data.</p>
                            <!-- <label>Destination in America</label> -->
                            <input type="text" id="arrival-line-2" class="member" name="properties[DestinationLine2]" value="Destiny: An American Lineage" title="You can put in anything as the second line, but we suggest it be the initial destination in America, or just leave it as: 'Destiny: An American Lineage'">
                            <script>
                                if(localStorage.DestinyLine1==undefined) {
                                    document.getElementById("trailer-line-3").value="" ;
                                }
                                else {
                                    document.getElementById("trailer-line-3").value=localStorage.DestinyLine1 ;
                                }
                                if(localStorage.DestinyLine2==undefined) {
                                    document.getElementById("arrival-line-2").value="" ;
                                }
                                else {
                                    document.getElementById("arrival-line-2").value=localStorage.DestinyLine2 ;
                                } ;
                            </script>
                        </div>
                    </div>
                </div>
            <div class="grid__item one-half small--one-whole">  
                    <p class="subtitle">Arrival TextBox Examples.</p>
                    <p><a class="bordered-image" target="_blank" href="https://cdn.shopify.com/s/files/1/1336/0641/files/001Col_IndepEra1630MayanGlowWintrhop_6f51dd60-78dd-4ed5-ab10-76b45e1b360f_1024x1024.png"><img src="{{ 'Arrival2.png' | asset_img_url: '350x' }}"/></a></p>
                    <p><a class="bordered-image" target="_blank" href="https://cdn.shopify.com/s/files/1/1336/0641/files/003EraOfTheSteamSailShip1860PalaceRosaPresidentDrw_1024x1024.png"><img src="{{ 'Arrival1.png' | asset_img_url: '350x' }}"/></a></p>
                    <p><a class="bordered-image" target="_blank" href="https://cdn.shopify.com/s/files/1/1336/0641/files/001Col_IndepEra1815EmpressTealFreidreichPtg_10d3ace8-6f4d-47bd-acaf-74ec424cde14_1024x1024.png"><img src="{{ 'Arrival3.png' | asset_img_url: '350x' }}"/></a></p>
                </div>
            </div>              
        </div>
    
    <!-- 
    https://jimaworks.com/pages/when-did-they-come-over
    -->
<!--
    <h3>Date of Voyage</h3>
      <div>
            <p class="line-item-property__field">
                <h2>When did they leave port?</h2>
                <p>If you know the year of the voyage, fill it in and we will use this to help you fill in later sections.  We'll also use it to give you an historically accurate map background.</p>
          <div class="grid--full">
            <div class="grid__item one-third small--one-whole">
                        <label>Year</label>
                        <select id="historical-date-of-map" name="properties[Year of Voyage]">
                            <option selected disabled>Year</option>
                            {%- for date in dates -%}
                                <script>
                                    var currentEraStart = localStorage.CommemorationTimePeriodStart ;
                                    var currentEraEnd = localStorage.CommemorationTimePeriodEnd ;
                                    if(currentEraStart<={{date}} && {{date}}<=currentEraEnd) {
                                        document.write("<option value="+{{ date }}+">{{ date }}</option>") ;
                                    }
                                </script>
                            {%- endfor -%}  
                        </select>
                    </div>
                    {% comment %}
            <div class="grid__item one-third small--one-whole">
                        <label>Month</label>
                        <select  id="historical-date-of-map" name="properties[Historical Date of Map]">
                            <option selected disabled>Month</option>
                            {%- for month in months -%}
                                <option value="{{ month }}">{{ month }}</option>
                            {%- endfor -%}  
                        </select>
                    </div>
            <div class="grid__item one-third small--one-whole">
                        <label>Day</label>
                        <select  id="historical-date-of-map" name="properties[Historical Date of Map]">
                            <option selected disabled>Day</option>
                            {%- for num in (1..31) -%}
                                <option value="{{ num }}">{{ num }}</option>
                            {%- endfor -%}  
                        </select>   
                    </div>
                    {% endcomment %}
                </div>  
            </p>    
        </div>
-->
        
        <!-- ShipInfo -->
        <h3><script>   if (localStorage.Era == 'EraOfAirTravel(1945-Present)') {
                            crossingTypeString='The Plane' ;
                            document.write(crossingTypeString)
                            } 
                       else {
                            crossingTypeString='The Ship' ;
                            document.write(crossingTypeString)
                           }
        </script></h3>
        <div>
            <h2><script>  if (localStorage.Era == 'EraOfAirTravel(1945-Present)') {document.write('Plane Information')} 
                          else {document.write('Ship Information')} </script></h2>
        <!-- 
        https://jimaworks.com/pages/what-ship-brought-them-here
        -->
    <!-- 
    <p><a href="https://jimaworks.com/pages/ship-choice-liner-era" a="" onclick="GetShip("Era")"> Chose a ship </a></p> 
    <button id="myButton" class="float-left submit-button" onclick="GetShip('Era')">Chose a ship</button>
    <p>Testing controls... Context status button? https://jimaworks.com/pages/the-story-so-far</p>
    <button id="myButton" class="float-left submit-button" onclick="location.href = 'https://jimaworks.com/pages/the-story-so-far';">Story So Far...</button>
    <p><a href="https://jimaworks.com/pages/the-story-so-far" a="" onclick="GetStorySoFar()"> See Story so far </a></p> 
    <p id="ReturnPoint">Returning here??</p>
    -->
    
    <!-- set up context-specific values for duration, etc -->
    
<!--
        <script type="text/javascript">
    /* genShipInfoLine1(); */
        var shipInfoLine1 ;
        var shipInfoLine2 ;
        var carrierName = localStorage.TransportCraft ;
        var carrierNumPassengers ;
        var carrierVoyageDuration ;
        
        if (localStorage.Era == 'ColonialAndEarlyIndependenceEra(1607-1820)') {
            carrierNumPassengers = 60 ;
            carrierVoyageDuration = "2-3 months" ;
            } 
        else if (localStorage.Era == 'EraOfModernSail(1800-1900)') {
            carrierNumPassengers = 120 ;
            carrierVoyageDuration = "6 weeks" ;
            } 
        else if (localStorage.Era == 'EraOfTheSteamSailShip(1840-1915)') {
            carrierNumPassengers = 250 ;
            carrierVoyageDuration = "3 weeks" ;
            } 
        else if (localStorage.Era == 'EraOfThePassengerLiner(1890-1970)') {
            carrierNumPassengers = 1200 ;
            carrierVoyageDuration = "10 days" ;
            } 
        else if (localStorage.Era == 'EraOfAirTravel(1945-Present)') {
            carrierNumPassengers = 150 ;
            carrierVoyageDuration = "8 hours" ;
            } 
        else {
            console.log("Error in 'generateShipInfoLine()' - undefined Era") ;
            carrierNumPassengers = 500 ;
            carrierVoyageDuration = "20 days" ;
            } 
    
        if (localStorage.ShowTransportCraftImage=="NoShip") {
            shipInfoLine1 ="Typical "+crossingTypeString+" of this era: "+carrierNumPassengers+" passengers." ;
            shipInfoLine2 ="Length of the cross-ocean voyage: about "+carrierVoyageDuration+"." ;
        }
        else if (localStorage.ShowTransportCraftImage=="TypicalShip") {
            shipInfoLine1 ="Typical "+crossingTypeString+" of this era: the "+carrierName+"." ;
            shipInfoLine2 ="Length of the cross-ocean voyage: about "+carrierVoyageDuration+"." ;
        }
        else if (localStorage.ShowTransportCraftImage=="KnownShip") {
            shipInfoLine1 ="The "+crossingTypeString+" of this crossing was the "+carrierName ;
            shipInfoLine2 ="Duration of its crossing: about "+carrierVoyageDuration+"." ;
        }
        else {
            shipInfoLine1 ="The Voyage.  Approximate Duration:" ;
            shipInfoLine2 ="1700: 2 Mo. 1900: 2 Wks.  Present: 6 Hrs" ;
            console.log("Error in 'generateShipInfoLine()' - undefined ShowTransportCraftImage value") ;
            }
    
        var elemLineA = document.getElementById("shipping-line-1"); // Get text field
        elemLineA.value = shipInfoLine1; // Change field
        var elemLineB = document.getElementById("shipping-line-2"); // Get text field
        elemLineB.value = shipInfoLine2; // Change field
    </script>
    <script>
        var ShipInfoInputLine1String = "TestString"
    </script>
    <script>
        ShipInfoInputLine1String =
             "<input  type=\"text\" id=\"shipping-line-1\" name=\"properties[ShipInfo Textbox Line 1]\" "
             +"value=\""
             +shipInfoLine1
             +"\" "
             +"title=\"The first line could carry the name of the ship, or just leave the default\">"
            ;
    </script>
-->    
          <p>You are free to customize this text however you wish.</p>
    
          <div class="grid--full">
            <div class="grid__item one-half small--one-whole">  
                    <p class="subtitle">
                        ShipInfo TextBox.  3 lines. Pre-entered text shown.  Click 
                        <a href="https://jimaworks.com/pages/where-did-they-land" a=""
                            style="color:red">
                            <em>Here</em>
                        </a>
                        for ShipInfo TextBox Hints and Tips
                    </p>
                    <div class="input_fields_wrap">
                      <div id="ships">
<!--
                               <label for="trailer-line-1">
                                <script>  if (localStorage.Era == 'EraOfAirTravel(1945-Present)') 
                                                {document.write('Plane Information')} 
                                           else {document.write('Ship Information')}
                                </script></label>
-->
    <!-- these two lines solicit a ship name from the ships in the current table
                            <input class="typeahead" id="trailer-line-1" type="text" name="properties[ShipInfo Textbox Line 1]" placeholder="Ship Traversals Could Take Months in the 17th Century" title="We suggest this be Ship Information, with the first line as the name of the ship of the crossing, or just leave it as: 'Ship Traversals Could Take Months in the 17th Century'">
                            <p class="help-text">Start typing to see a list of previously prepared ships or write in your own.  If you completed the date, origin or arrival sections, we will suggest only ships that match that data.</p>
    -->
    
                            <input  type="text" id="shipping-line-1" name="properties[ShipInfoLine1]" 
                                    value="The Voyage.  Approximate Durations:"
                                    title="The first line could carry the name of the ship, or just leave the default">
    <!--
          <p>
            <script type="text/javascript">
               document.write(ShipInfoInputLine1String) ; 
    /*            document.write("The Voyage.  Approximate Durations:") ; */
            </script>
          </p>
    -->
                            <input  type="text" id="shipping-line-2" name="properties[ShipInfoLine2]" 
                                    value="1700: 2 Mo. 1900: 2 Wks.  Present: 6 Hrs"
                                    title="The second line could then be the name of the shipping line, or just leave the default'">
                            <input type="text" id="shipping-line-3" class="member" name="properties[ShipInfoLine3]" title="Optional third line" placeholder="Optional extra field">
                            <script>
                                window.addEventListener('DOMContentLoaded', function fillShippingLineInputs() {
                                    var shippingLine1 = document.getElementById('shipping-line-1');
                                    var shippingLine2 = document.getElementById('shipping-line-2');
                                    var shippingLine3 = document.getElementById('shipping-line-3');

                                    if ( localStorage.getItem('DestinyLine1') === null ) {
                                        shippingLine1.value = '';
                                    }
                                    else {
                                        shippingLine1.value = ( localStorage.getItem('ShipInfoLine1') || '' );
                                    }

                                    if ( localStorage.getItem('DestinyLine2') === null ) {
                                        shippingLine2.value = '';
                                    }
                                    else {
                                        shippingLine2.value = ( localStorage.getItem('ShipInfoLine2') || '' );
                                    }

                                    if ( localStorage.getItem('DestinyLine2') === null ) {
                                        shippingLine3.value = '';
                                    }
                                    else {
                                        shippingLine3.value = ( localStorage.getItem('ShipInfoLine3') || '' );
                                    }
                                });
                            </script>
                     </div> 
                    </div>
                </div>
            <div class="grid__item one-half small--one-whole">  
                    <p class="subtitle">ShipInfo TextBox Examples.</p>
                    <p><a class="bordered-image" target="_blank" href="https://cdn.shopify.com/s/files/1/1336/0641/files/001Col_IndepEra1700PalaceRosaFlute_cdf55333-8641-4755-95eb-aab81e60cdb1_1024x1024.png"><img src="{{ 'Ship2.png' | asset_img_url: '350x' }}"/></a></p>
                    <p><a class="bordered-image" target="_blank" href="https://cdn.shopify.com/s/files/1/1336/0641/files/Gallery-1849-CustomNoBorders_1024x1024.png"><img src="{{ 'Ship1.png' | asset_img_url: '350x' }}"/></a></p>
                </div>
            </div>              
        </div>
    
        <h3>Plaque Text</h3>
        <!-- 
        https://jimaworks.com/pages/who-came-over
        -->
        <div>
            <h2>Confirm & Edit Plaque Information</h2>
            <p>This is for the Plaque at the bottom. Fill up to 8 lines of text. If you know the names of the passengers, we suggest you include these on the Plaque.</p>
        
            <h3>Commemorative Plaque</h3>
          <div class="grid--full">
            <div class="grid__item one-half small--one-whole">  
                    <p class="subtitle">
                        Specify your Plaque.  Up to 8 lines. A pre-entered filler line shown.  Click 
                        <a href="https://jimaworks.com/pages/where-did-they-land" a=""
                            style="color:red">
                            <em>Here</em>
                        </a>
                        for Plaque Hints and Tips
                    </p>
                    <div class="input_fields_wrap">
                      <div>
                            <input type="text" id="plaque-line-1" class="member" name="properties[PlaqueLine1]"
                                   value="In Appreciation of" title="Replace the filler/default text as desired.">
                            <input type="text" id="plaque-line-2" class="member" name="properties[PlaqueLine2]"
                                   value="the Initiative and Courage of" title="Replace the filler/default text as desired.">
                            <input type="text" id="plaque-line-3" class="member" name="properties[PlaqueLine3]"
                                   value="Our Forebears Who First Crossed to America" title="Replace the filler/default text as desired.">
                            <input type="text" id="plaque-line-4" class="member" name="properties[PlaqueLine4]" title="Optional" placeholder="Optional Extra Line">
                            <input type="text" id="plaque-line-5" class="member" name="properties[PlaqueLine5]" title="Optional" placeholder="Optional Extra Line">
                            <input type="text" id="plaque-line-6" class="member" name="properties[PlaqueLine6]" title="Optional" placeholder="Optional Extra Line">
                            <input type="text" id="plaque-line-7" class="member" name="properties[PlaqueLine7]" title="Optional" placeholder="Optional Extra Line">
                            <input type="text" id="plaque-line-8" class="member" name="properties[PlaqueLine8]" title="Optional" placeholder="Optional Extra Line">
                            <script>
                                window.addEventListener('DOMContentLoaded', function fillPlaqueLineInputs() {
                                    for ( var index = 1; index < 9; index++ ) {
                                        var input = document.getElementById("plaque-line-" + index);
                                        var plaqueLine = localStorage.getItem('PlaqueLine' + index);
                                        var doesntHaveDestinyInfo;

                                        if ( index === 1 ) {
                                            doesntHaveDestinyInfo = ( localStorage.getItem('DestinyLine1') === null );
                                        } else {
                                            doesntHaveDestinyInfo = (
                                                ( localStorage.getItem('DestinyLine2') === null )
                                                || ( localStorage.getItem('DestinyLine1') === null )
                                            );
                                        }

                                        if ( doesntHaveDestinyInfo ) {
                                            input.value = '';
                                        } else {
                                            input.value = ( plaqueLine || '' );
                                        }
                                    }
                                } );
                            </script>
                        </div>
                    </div>
                </div>
                
            <div class="grid__item one-half small--one-whole">  
                    <p class="subtitle">Plaque Examples.</p>
                    <p>This goes on the plaque at the bottom of the map.</p>
                    <p><img src="{{ 'JordanPlaque.png' | asset_img_url: '350x' }}"/></p>
                    <p class="help-text text-center">Example 1 - Limited Information Available.</p>
    
                    <p><img src="{{ 'plaque-example.jpg' | asset_img_url: '350x' }}"/></p>
                    <p class="help-text text-center">Example 2 - All Information Available.</p>
    
                </div>
            </div>              
        </div>
        
    </div>
    
    
    <script type="text/javascript"> 
    function genShipInfoLine1() {
        var shipInfoLine1 ;
        var shipInfoLine2 ;
        var carrierName = localStorage.TransportCraft ;
        var carrierNumPassengers ;
        var carrierVoyageDuration ;
        
        if (localStorage.Era == 'ColonialAndEarlyIndependenceEra(1607-1820)') {
            carrierNumPassengers = 60 ;
            carrierVoyageDuration = "2-3 months" ;
            } 
        else if (localStorage.Era == 'EraOfModernSail(1800-1900)') {
            carrierNumPassengers = 120 ;
            carrierVoyageDuration = "6 weeks" ;
            } 
        else if (localStorage.Era == 'EraOfTheSteamSailShip(1840-1915)') {
            carrierNumPassengers = 250 ;
            carrierVoyageDuration = "3 weeks" ;
            } 
        else if (localStorage.Era == 'EraOfThePassengerLiner(1890-1970)') {
            carrierNumPassengers = 1200 ;
            carrierVoyageDuration = "10 days" ;
            } 
        else if (localStorage.Era == 'EraOfAirTravel(1945-Present)') {
            carrierNumPassengers = 150 ;
            carrierVoyageDuration = "8 hours" ;
            } 
        else {
            console.log("Error in 'generateShipInfoLine()' - undefined Era") ;
            carrierNumPassengers = 500 ;
            carrierVoyageDuration = "20 days" ;
            } 
    
        if (localStorage.ShowTransportCraftImage=="NoShip") {
            shipInfoLine1 ="A typical "+crossingTypeString+" of this era would carry "+carrierNumPassengers+" passengers." ;
            shipInfoLine2 ="It would take on the order of "+carrierVoyageDuration+" to make the cross-ocean voyage." ;
        }
        else if (localStorage.ShowTransportCraftImage=="TypicalShip") {
            shipInfoLine1 ="A typical "+crossingTypeString+" of this era was the "+carrierName ;
            shipInfoLine2 ="It would take on the order of "+carrierVoyageDuration+" to make its cross-ocean voyage." ;
        }
        else if (localStorage.ShowTransportCraftImage=="KnownShip") {
            shipInfoLine1 ="The "+crossingTypeString+" of this crossing was the "+carrierName ;
            shipInfoLine2 ="It would take on the order of "+carrierVoyageDuration+" to make its cross-ocean voyage." ;
        }
        else {
            console.log("Error in 'generateShipInfoLine()' - undefined ShowTransportCraftImage value") ;
            }
    
        var elemLineA = document.getElementById("shipping-line-1"); // Get text field
        elemLineA.value = shipInfoLine1; // Change field
        var elemLineB = document.getElementById("shipping-line-2"); // Get text field
        elemLineB.value = shipInfoLine2; // Change field
    }
    </script>
    
    
    
    <!-- Additional Date Info (from historical context etc) -->
    <script type="text/javascript">
    
        document.write( /* shipping-line-5... */
            '<input type=\"hidden\" id=\"'
                + 'shipping-line-5' + '\" class=\"member\" name=\"properties['
                + 'Origins]\" value=' + origins + '>' ) ;
                
        document.write( /* shipping-line-5... */
            '<input type=\"hidden\" id=\"'
                + 'shipping-line-5' + '\" class=\"member\" name=\"properties['
                + 'Era]\" value=' + Era + '>' ) ;
    
        document.write( /* shipping-line-5... */
            '<input type=\"hidden\" id=\"'
                + 'shipping-line-5' + '\" class=\"member\" name=\"properties['
                + 'CommemorationTimePeriodStart]\" value=' + (
                    localStorage.getItem("CommemorationTimePeriodStart")
                    || localStorage.getItem("CommemorationTimePeriodStartDefault")
                    || ''
                ) + '>' ) ;
    
        document.write( /* shipping-line-5... */
            '<input type=\"hidden\" id=\"'
                + 'shipping-line-5' + '\" class=\"member\" name=\"properties['
                + 'CommemorationTimePeriodEnd]\" value=' + (
                    localStorage.getItem("CommemorationTimePeriodEnd")
                    || localStorage.getItem("CommemorationTimePeriodEndDefault")
                    || ''
                ) + '>' ) ;
    
        // document.write( /* shipping-line-5... */
        //     '<input type=\"hidden\" id=\"'
        //         + 'shipping-line-5' + '\" class=\"member\" name=\"properties['
        //         + 'Passage]\" value=' + Passage + '>' ) ;
    
        document.write(
            '<input type=\"hidden\"'
                + ' id=\"shipping-line-4\"'
                + ' class=\"member\"'
                + ' name=\"properties[TransportCraft]\"'
                + ' value='
                + ( localStorage.getItem("TransportCraft") || localStorage.getItem("TransportCraftDefault") || '' )
                + '>' 
        ) ;
    /*          
                + ' title=\"javascript Generated Experimental 4th line\"'
                + ' placeholder=\".js-Generated Experimental extra field\"'
    */
        document.write( /* shipping-line-5... */
            '<input type=\"hidden\" id='
                + '\"shipping-line-5\"' + ' class=\"member\" name=\"properties['
                + 'shipPic]\" value=' + (
                    localStorage.getItem("shipPic")
                    || localStorage.getItem("shipPicDefault")
                    || ''
                ) + '>' ) ;
    
        document.write( /* shipping-line-5... */
            '<input type=\"hidden\" id=\"'
                + 'shipping-line-5' + '\" class=\"member\" name=\"properties['
                + 'shippingLine]\" value=' + (
                    localStorage.getItem("shippingLine")
                    || localStorage.getItem("shippingLineDefault")
                    || ''
                ) + '>' ) ;
    
        document.write( /* shipping-line-5... */
            '<input type=\"hidden\" id=\"'
                + 'shipping-line-5' + '\" class=\"member\" name=\"properties['
                + 'shipCareerStart]\" value=' + (
                    localStorage.getItem("shipCareerStart")
                    || localStorage.getItem("shipCareerStartDefault")
                    || ''
                ) + '>' ) ;
    
        document.write( /* shipping-line-5... */
            '<input type=\"hidden\" id=\"'
                + 'shipping-line-5' + '\" class=\"member\" name=\"properties['
                + 'shipCareerEnd]\" value=' + (
                    localStorage.getItem("shipCareerEnd")
                    || localStorage.getItem("shipCareerEndDefault")
                    || ''
                ) + '>' ) ;
    
        document.write( /* shipping-line-5... */
            '<input type=\"hidden\" id=\"'
                + 'shipping-line-5' + '\" class=\"member\" name=\"properties['
                + 'shipTotPsgrVolume]\" value=' + (
                    localStorage.getItem("shipTotPsgrVolume")
                    || localStorage.getItem("shipTotPsgrVolumeDefault")
                    || ''
                ) + '>' ) ;
    </script>    

    <script>
        $(document).ready(function() {
            var max_fields      = 7; //maximum input boxes allowed
            var wrapper         = $(".input_fields_wrap"); //Fields wrapper
            var add_button      = $(".add_field_button"); //Add button ID
        
            var x = 1; //initlal text box count
            $(add_button).click(function(e){ //on add input button click
                e.preventDefault();
                if(x < max_fields){ //max input box allowed
                    x++; //text box increment
                    $(wrapper).append('<div class="member"><label for="name-' + x + '">Traveler ' + x + '</label><input type="text"  id="name-' + x + '" name="properties[Name #' + x + ']" placeholder="E.g. Full Name, Relation to others who crossed, Age at crossing"><a href="#" class="remove_field">Remove</a></div>'); //add input box
                }
            });
        
            $(wrapper).on("click",".remove_field", function(e){ //user click on remove text
                e.preventDefault(); $(this).parent('div').remove(); x--;
            })
        });
        
        $("#name-1").keyup(function () {
              var passenger1 = $('#name-1').val()
                $('#plaque-line-2').val(function passenger1() {
                    
                }
                );
        });
    </script>
    
        
    <script type="text/javascript">// <![CDATA[
    function GetStorySoFar() {
        var shipChoicePage = "https://jimaworks.com/pages/the-story-so-far";  /* this if for the Liner era */
        window.location.assign(shipChoicePage);
    }
    // ]]></script>
    
    <script type="text/javascript">// <![CDATA[
    function GetShip(ParamEra) {
        var Era = "Era" ;
        if (Era == "Era") {
            var shipChoicePage = "https://jimaworks.com/pages/ship-choice-liner-era";  /* this if for the Liner era */
            }
        else if (Era == "Era") {
            var shipChoicePage = "https://jimaworks.com/pages/ship-choice-liner-era";
            }
        else if (Era == "Era") {
            var shipChoicePage = "https://jimaworks.com/pages/ship-choice-liner-era";
            }
        else if (Era == "Era") {
            var shipChoicePage = "https://jimaworks.com/pages/ship-choice-liner-era";
            }
        else if (Era == "Era") {
            var shipChoicePage = "https://jimaworks.com/pages/ship-choice-liner-era";
            }
        else if (Era == "Era") {
            var shipChoicePage = "https://jimaworks.com/pages/ship-choice-liner-era";
            }
        window.location.assign(shipChoicePage);
    }
    // ]]></script>
    
    <!--
        
    if your form contains an input field like
    
    <input type='text' id='id1' />
    then you can write the code in javascript as given below to set its value as
    
    document.getElementById('id1').value='text to be displayed' ;
    -->
    <script type="text/javascript">
    function generateShipInfoLines(lineNum) {
        var shipInfoLine1 ;
        var shipInfoLine2 ;
        var carrierNumPassengers ;
        var carrierVoyageDuration ;
        
           carrierNumPassengers = 150 ;
           carrierVoyageDuration = "8 hours" ;
    
            shipInfoLine1 ="A typical "+crossingTypeString+" of this era would carry "+carrierNumPassengers+" passengers." ;
            shipInfoLine2 ="It would take on the order of "+carrierVoyageDuration+" to make the cross-ocean voyage." ;
    
        if (lineNum==1) {
            document.write(shipInfoLine1) ;
        }
        else if (lineNum==2) {
            document.write(shipInfoLine2) ;
        }
        else {
            document.write("Error") ;
            }
        }
    //     var elem = document.getElementById("testScope"); // Get text field
    //     elem.value = "My default value"; // Change field
    
    </script>
    
    <script type="text/javascript">
    function generateShipInfoLines2(lineNum) {
        var shipInfoLine1 ;
        var shipInfoLine2 ;
        var carrierNumPassengers ;
        var carrierVoyageDuration ;
        
        if (localStorage.Era == 'ColonialAndEarlyIndependenceEra(1607-1820)') {
            carrierNumPassengers = 150 ;
            carrierVoyageDuration = "8 hours" ;
            } 
        else if (localStorage.Era == 'EraOfModernSail(1800-1900)') {
            carrierNumPassengers = 150 ;
            carrierVoyageDuration = "8 hours" ;
            } 
        else if (localStorage.Era == 'EraOfTheSteamSailShip(1840-1915)') {
            carrierNumPassengers = 150 ;
            carrierVoyageDuration = "8 hours" ;
            } 
        else if (localStorage.Era == 'EraOfThePassengerLiner(1890-1970)') {
            carrierNumPassengers = 150 ;
            carrierVoyageDuration = "8 hours" ;
            } 
        else if (localStorage.Era == 'EraOfAirTravel(1945-Present)') {
            carrierNumPassengers = 150 ;
            carrierVoyageDuration = "8 hours" ;
            } 
        else {
            console.log("Error in 'generateShipInfoLine()' - undefined Era") ;
            } 
    
        if (localStorage.ShowTransportCraftImage=="NoShip") {
            shipInfoLine1 ="A typical "+crossingTypeString+" of this era would carry "+carrierNumPassengers+" passengers." ;
            shipInfoLine2 ="It would take on the order of "+carrierVoyageDuration+" to make the cross-ocean voyage." ;
        }
        else if (localStorage.ShowTransportCraftImage=="TypicalShip") {
            shipInfoLine1 ="A typical "+crossingTypeString+" of this era was the "+carrierName ;
            shipInfoLine2 ="It would take on the order of "+carrierVoyageDuration+" to make its cross-ocean voyage." ;
        }
        else if (localStorage.ShowTransportCraftImage=="KnownShip") {
            shipInfoLine1 ="The "+crossingTypeString+" of this crossing was the "+carriername ;
            shipInfoLine2 ="It would take on the order of "+carrierVoyageDuration+" to make its cross-ocean voyage." ;
        }
        else {
            console.log("Error in 'generateShipInfoLine()' - undefined ShowTransportCraftImage value") ;
            }
    
        if (lineNum==1) {
            document.write("<input class=\"typeahead\" id=\"trailer-line-1\" type=\"text\" name=\"properties[ShipInfo Textbox Line 1]\" placeholder="
                           +shipInfoLine1
                           +" title=\"We suggest this be Ship Information, with the first line as the name of the ship of the crossing, or just leave the default text\">"
                           ) ;
        }
        else if (lineNum==2) {
            document.write(shipInfoLine2) ;
        }
        else {
            console.log("Error in 'generateShipInfoLine()' - undefined lineNum") ;
            }
    }
    </script>
    
    <!--
        <input type="text" id="Orig" class="member" name="properties[Country of Origin]" value="Heritage: Their Old World Origins" title="We suggest the first line be the Country of Origin, but you can put in anything, or just leave it as 'Heritage: Their Old World Origins'">
    <input type="hidden" id="myInput" value="W3Schools">
    <script type="text/javascript">// <![CDATA[
        
        var ShowWhat = localStorage.ShowTransportCraftImage ;
        document.write(
            '<input type=\"hidden\" id=\"Orig\" class=\"member\" name=\"properties[Country of Origin]\" value='
            + ShowWhat 
            + ' title=\"RelationShhip or ArrivalMap?\">' 
        ) ;
    
    // ]]></script>
    -->
