<div class="grid">
  <div class="grid__item post-large--two-thirds push--post-large--one-sixth">
    <div class="section-header">
      <h1 class="section-header--title">{{ page.title }}</h1>
    </div>
    <script id="liquid">
      window.Jimaworks = ( window.Jimaworks || {} );
      window.Jimaworks.Liquid = ( window.Jimaworks.Liquid || {} );
      window.Jimaworks.Liquid.page = {
        "id": "{{ page.id }}",
        "handle": "{{ page.handle }}"
      };
      console.warn( 'window.Jimaworks.Liquid.page', window.Jimaworks.Liquid.page );
    </script>
    <template id="preview-template" style="display:none;">
      {% include 'relationships-preview-redux' %}
    </template>
    <article class="jw-relationships-tour">
      <!-- <nav class="jw-relationships-tour__actions"></nav> -->
      <div id="relationships-tour-content" class="jw-relationships-tour__content jw-relationships-tour__content--active">
        <div id="map" class="jw-relationships-tour__map"></div>
        <aside id="sidebar" class="jw-relationships-tour__sidebar jw-relationships-tour__sidebar--active">
          <!-- <nav class="jw-relationships-tour__navigation">
            <span id="tour-actions" class="jw-tour__actions">
              <a id="previous" class="jw-tour__action --disabled" href="javascript:void(0);">Previous</a>
              <a id="next" class="jw-tour__action" href="javascript:void(0);">Next</a>
            </span>
          </nav> -->
          <div id="tour" class="jw-tour --expanded">
            <div class="jw-tour__descriptions">
              <article
                id="frame-description"
                class="jw-tour__description jw-tour__description--active"
                style="width: 100%;"
              >
                <h3 class="jw-tour-spot__heading">Frame</h3>
                <div class="jw-tour-spot__body">
                  <label for="frame-size-selection">Size</label>
                  <select id="frame-size-selection">
                    {% for size_option in product.options_by_name['Size'].values %}
                      <option data-variant-id="{{ size_option }}" value="{{ size_option | | handleize }}">{{ size_option }}</option>
                    {% endfor %}
                  </select>
                </div>
              </article>
            </div>
          </div>
        </aside>
      </div>
    </article>

    <script>
      // Override default values of shop.strings for each template.
      // Alternate product templates can change values of
      // add to cart button, sold out, and unavailable states here.
      theme.productStrings = {
        addToCart: {{ 'products.product.add_to_cart' | t | json }},
        soldOut: {{ 'products.product.sold_out' | t | json }},
        unavailable: {{ 'products.product.unavailable' | t | json }}
      }
    </script>

    <script>
      function recordFrameSizeChoice( variantId, variantAbbreviation ) {
        localStorage.setItem( "Size", variantId );

        if ( variantAbbreviation && variantAbbreviation.length ) {
          localStorage.setItem( "SizeAbbrev", variantAbbreviation ); // Not used AFAICT
        } else {
          localStorage.removeItem( "SizeAbbrev" );
        }
      }

      function preloadPreviewImages() {
        for ( var key in previewImages ) {
          var currentFrameImage = previewImages[key];
          var link = document.createElement( 'link' );
          link.rel = 'preload';
          link.href = currentFrameImage;
          link.as = 'image';
          document.head.appendChild( link );
        }

        previewImagesLoaded = true;
        $frameSizeSelection.removeEventListener( 'mouseover', preloadPreviewImages );
        $frameSizeSelection.removeEventListener( 'click', preloadPreviewImages );
      }

      function changeMapBackground( $mapBackground, newMapBackgroundClassId ) {
        var newMapBackgroundClass = ( 'jw-map--color-' + newMapBackgroundClassId );

        if ( $mapBackground.className.indexOf( 'jw-map--color-' ) !== -1 ) {
          $mapBackground.className = $mapBackground.className.replace(
            /\bjw-map--color-[^\s]+\b/,
            newMapBackgroundClass
          );
        } else {
          $mapBackground.classList.add( newMapBackgroundClass );
        }
      }

      function changeFrame( newFrameClassId ) {
        var newFrameClass = ( 'jw-relationships-preview--frame-' + newFrameClassId );

        if ( $preview.className.indexOf( 'jw-relationships-preview--frame-' ) !== -1 ) {
          $preview.className = $preview.className.replace(
            /\bjw-relationships-preview--frame-[^\s]+\b/,
            newFrameClass
          );
        } else {
          $preview.classList.add( newFrameClass );
        }
      }

      function getSelectedOption( $select ) {
        return $select.querySelector( ':checked' );
      }

      function getVariantIdFromOption( $option ) {
        return ( $option.dataset ? $option.dataset.variantId : $option.getAttribute( 'data-variant-id' ) );
      }

      function selectOptionWithVariantId( variantId ) {
        var $option = $frameSizeSelection.querySelector( '[data-variant-id="' + variantId + '"]' );

        if ( $option ) {
          $option.selected = true; 
        }
      }

      function getSavedFrameVariantId() {
        var savedFrameVariantId = localStorage.getItem( 'Frame' );

        if ( !savedFrameVariantId || ( savedFrameVariantId === 'undefined' ) ) {
          localStorage.setItem( 'Frame', 'BlackWalnut' );
          savedFrameVariantId = 'BlackWalnut';
        }

        return savedFrameVariantId;
      }

      var $previewLayoutContainer = document.getElementById( 'map' );
      var $previewTemplate = document.getElementById( 'preview-template' );
      var $frameSizeSelection = document.getElementById('frame-size-selection');
      var $preview;
      var previewImagesLoaded = false;
      var previewImages = {
        /* Frames */
        "BlackWalnut": "https://cdn.shopify.com/s/files/1/1336/0641/files/GoldRatio-Med-Walnut-NoPlaque-NoRuler-72ppi.png",
        "GoldTrim": "https://cdn.shopify.com/s/files/1/1336/0641/files/GoldRatio-Med-Gold-NoRuler-72ppi.png",
        "LightCherry": "https://cdn.shopify.com/s/files/1/1336/0641/files/GoldRatio-Med-Cherry-NoRuler-72ppi.png",
        "BlackRoped": "https://cdn.shopify.com/s/files/1/1336/0641/files/GoldRatio-Med-Black-NoRuler-72ppi.png"
      };
      var defaultFrameVariantId = 'BlackWalnut';
      var defaultFrameClassId = 'black-walnut';
      var frameVariantToClassId = {
        "BlackWalnut": "black-walnut",
        "GoldTrim": "gold-trim",
        "LightCherry": "light-cherry",
        "BlackRoped": "black-roped"
      };
      var savedFrameVariantId = localStorage.getItem( 'Frame' );
      var defaultMapBackgroundVariantId = 'ParisSage';
      var defaultMapBackgroundClassId = 'paris-sage';
      var mapVariantToClassId = {
        "ParisSage": "paris-sage",
        "EmpressTeal": "empress-teal",
        "PalaceRosa": "palace-rosa",
        "SeaSprayBlue": "sea-spray-blue",
        "MayanGlow": "mayan-glow"
      };
      var savedMapBackgroundVariantId = localStorage.getItem( 'MapStyle' );

      // initializeDefaults();
      $previewLayoutContainer.innerHTML = $previewTemplate.innerHTML;
      $preview = $previewLayoutContainer.querySelector('.jw-relationships-preview');

      window.addEventListener( "DOMContentLoaded", function pickYourFrame__onDomContentLoaded() {
        var $mapBackground = document.getElementById( 'map-background' );
        var $frameSizes = $frameSizeSelection.querySelectorAll( 'option' );

        for (var i = 0; i < $frameSizes.length; i++) {
          var $frameSize = $frameSizes[i];
          
          $frameSize.value = frameVariantToClassId[getSavedFrameVariantId()] + '-' + $frameSize.value;
        }

        $frameSizeSelection.addEventListener( 'mouseover', preloadPreviewImages, false );
        $frameSizeSelection.addEventListener( 'click', preloadPreviewImages, false );

        $frameSizeSelection.addEventListener( 'change', function frameSizeSelectionChanged( event ) {
          var newValue = event.target.value;
          // $preview already initialized in surrounding scope

          changeFrame( newValue );

          var $selectedOption = getSelectedOption( event.target );
          var variantId = getVariantIdFromOption( $selectedOption );

          recordFrameSizeChoice( variantId, previewImages[variantId] );
        }, false );

        if ( savedFrameVariantId !== defaultFrameVariantId ) {
          selectOptionWithVariantId( savedFrameVariantId );
        }

        if ( savedMapBackgroundVariantId !== defaultMapBackgroundVariantId ) {
          changeMapBackground( $mapBackground, mapVariantToClassId[savedMapBackgroundVariantId] )
        }

        // In case user hits back button and browser remembers selection, update the frame to match
        setTimeout( function alignFrameWithSelection() {
          var $initialSelection = getSelectedOption( $frameSizeSelection );

          if ( $initialSelection && ( $initialSelection.value !== defaultFrameClassId ) ) {
            changeFrame( $initialSelection.value );
          }
        }, 0 );
      } );
    </script>
  </div>
</div>
